{
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | SQLHelper API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | SQLHelper API Reference",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes RegistrationExtensions Registration extension methods"
  },
  "api/Microsoft.Extensions.DependencyInjection.RegistrationExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.RegistrationExtensions.html",
    "title": "Class RegistrationExtensions | SQLHelper API Reference",
    "keywords": "Class RegistrationExtensions Registration extension methods Inheritance object RegistrationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Microsoft.Extensions.DependencyInjection Assembly: SQLHelper.DB.dll Syntax public static class RegistrationExtensions Methods | Improve this Doc View Source RegisterSQLHelper(ICanisterConfiguration?) Registers the library with the bootstrapper. Declaration public static ICanisterConfiguration? RegisterSQLHelper(this ICanisterConfiguration? bootstrapper) Parameters Type Name Description ICanisterConfiguration bootstrapper The bootstrapper. Returns Type Description ICanisterConfiguration The bootstrapper"
  },
  "api/SQLHelperDB.CanisterModules.html": {
    "href": "api/SQLHelperDB.CanisterModules.html",
    "title": "Namespace SQLHelperDB.CanisterModules | SQLHelper API Reference",
    "keywords": "Namespace SQLHelperDB.CanisterModules Classes SQLHelperModule SQLHelper Canister module."
  },
  "api/SQLHelperDB.CanisterModules.SQLHelperModule.html": {
    "href": "api/SQLHelperDB.CanisterModules.SQLHelperModule.html",
    "title": "Class SQLHelperModule | SQLHelper API Reference",
    "keywords": "Class SQLHelperModule SQLHelper Canister module. Inheritance object SQLHelperModule Implements IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SQLHelperDB.CanisterModules Assembly: SQLHelper.DB.dll Syntax public class SQLHelperModule : IModule Properties | Improve this Doc View Source Order Order to run this in Declaration public int Order { get; } Property Value Type Description int See Also IModule Methods | Improve this Doc View Source Load(IServiceCollection?) Loads the module using the bootstrapper Declaration public void Load(IServiceCollection? bootstrapper) Parameters Type Name Description IServiceCollection bootstrapper The bootstrapper. See Also IModule Implements IModule See Also IModule"
  },
  "api/SQLHelperDB.ExtensionMethods.DbCommandExtensions.html": {
    "href": "api/SQLHelperDB.ExtensionMethods.DbCommandExtensions.html",
    "title": "Class DbCommandExtensions | SQLHelper API Reference",
    "keywords": "Class DbCommandExtensions Extension methods for DbCommand Inheritance object DbCommandExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SQLHelperDB.ExtensionMethods Assembly: SQLHelper.DB.dll Syntax public static class DbCommandExtensions Methods | Improve this Doc View Source AddParameter(DbCommand, string, DbType, object?, ParameterDirection) Adds a parameter to the call (for all types other than strings) Declaration public static DbCommand AddParameter(this DbCommand command, string id, DbType type, object? value = null, ParameterDirection direction = ParameterDirection.Input) Parameters Type Name Description DbCommand command Command object string id Name of the parameter DbType type SQL type of the parameter object value Value to add ParameterDirection direction Direction that the parameter goes (in or out) Returns Type Description DbCommand The DbCommand object Exceptions Type Condition ArgumentNullException command or id | Improve this Doc View Source AddParameter(DbCommand, string, SqlDbType, object?, ParameterDirection) Adds a parameter to the call (for all types other than strings) Declaration public static DbCommand AddParameter(this DbCommand command, string id, SqlDbType type, object? value = null, ParameterDirection direction = ParameterDirection.Input) Parameters Type Name Description DbCommand command Command object string id Name of the parameter SqlDbType type SQL type of the parameter object value Value to add ParameterDirection direction Direction that the parameter goes (in or out) Returns Type Description DbCommand The DbCommand object Exceptions Type Condition ArgumentNullException command or id | Improve this Doc View Source AddParameter(DbCommand, string, string, ParameterDirection) Adds a parameter to the call (for strings only) Declaration public static DbCommand AddParameter(this DbCommand command, string id, string value = \"\", ParameterDirection direction = ParameterDirection.Input) Parameters Type Name Description DbCommand command Command object string id Name of the parameter string value Value to add ParameterDirection direction Direction that the parameter goes (in or out) Returns Type Description DbCommand The DbCommand object | Improve this Doc View Source AddParameter<TDataType>(DbCommand, string, TDataType, ParameterDirection) Adds a parameter to the call (for all types other than strings) Declaration public static DbCommand AddParameter<TDataType>(this DbCommand command, string id, TDataType value = default, ParameterDirection direction = ParameterDirection.Input) Parameters Type Name Description DbCommand command Command object string id Name of the parameter TDataType value Value to add ParameterDirection direction Direction that the parameter goes (in or out) Returns Type Description DbCommand The DbCommand object Type Parameters Name Description TDataType Data type of the parameter Exceptions Type Condition ArgumentNullException command or id | Improve this Doc View Source BeginTransaction(DbCommand, int) Begins a transaction Declaration public static DbTransaction? BeginTransaction(this DbCommand command, int retries = 0) Parameters Type Name Description DbCommand command Command object int retries The retries. Returns Type Description DbTransaction A transaction object | Improve this Doc View Source ClearParameters(DbCommand) Clears the parameters Declaration public static DbCommand? ClearParameters(this DbCommand command) Parameters Type Name Description DbCommand command Command object Returns Type Description DbCommand The DBCommand object | Improve this Doc View Source Close(DbCommand) Closes the connection Declaration public static DbCommand? Close(this DbCommand command) Parameters Type Name Description DbCommand command Command object Returns Type Description DbCommand The DBCommand object | Improve this Doc View Source Commit(DbCommand) Commits a transaction Declaration public static DbCommand? Commit(this DbCommand command) Parameters Type Name Description DbCommand command Command object Returns Type Description DbCommand The DBCommand object | Improve this Doc View Source ExecuteScalarAsync<TDataType>(DbCommand, TDataType, int) Executes the stored procedure as a scalar query async Declaration public static Task<TDataType> ExecuteScalarAsync<TDataType>(this DbCommand command, TDataType defaultValue = default, int retries = 0) Parameters Type Name Description DbCommand command Command object TDataType defaultValue Default value if there is an issue int retries The retries. Returns Type Description Task<TDataType> The object of the first row and first column Type Parameters Name Description TDataType The type of the ata type. | Improve this Doc View Source ExecuteScalar<TDataType>(DbCommand, TDataType, int) Executes the stored procedure as a scalar query Declaration public static TDataType ExecuteScalar<TDataType>(this DbCommand command, TDataType defaultValue = default, int retries = 0) Parameters Type Name Description DbCommand command Command object TDataType defaultValue Default value if there is an issue int retries The retries. Returns Type Description TDataType The object of the first row and first column Type Parameters Name Description TDataType The type of the ata type. | Improve this Doc View Source GetOrCreateParameter(DbCommand, string) Gets a parameter or creates it, if it is not found Declaration public static DbParameter GetOrCreateParameter(this DbCommand command, string id) Parameters Type Name Description DbCommand command Command object string id Name of the parameter Returns Type Description DbParameter The DbParameter associated with the ID | Improve this Doc View Source GetOutputParameter<TDataType>(DbCommand, string, TDataType) Returns an output parameter's value Declaration public static TDataType GetOutputParameter<TDataType>(this DbCommand command, string id, TDataType defaultValue = default) Parameters Type Name Description DbCommand command Command object string id Parameter name TDataType defaultValue Default value for the parameter Returns Type Description TDataType if the parameter exists (and isn't null or empty), it returns the parameter's value. Otherwise the default value is returned. Type Parameters Name Description TDataType Data type of the object | Improve this Doc View Source Open(DbCommand, int) Opens the connection Declaration public static DbCommand? Open(this DbCommand command, int retries = 0) Parameters Type Name Description DbCommand command Command object int retries The retries. Returns Type Description DbCommand The DBCommand object | Improve this Doc View Source Rollback(DbCommand) Rolls back a transaction Declaration public static DbCommand? Rollback(this DbCommand command) Parameters Type Name Description DbCommand command Command object Returns Type Description DbCommand The DBCommand object"
  },
  "api/SQLHelperDB.ExtensionMethods.html": {
    "href": "api/SQLHelperDB.ExtensionMethods.html",
    "title": "Namespace SQLHelperDB.ExtensionMethods | SQLHelper API Reference",
    "keywords": "Namespace SQLHelperDB.ExtensionMethods Classes DbCommandExtensions Extension methods for DbCommand IDataRecordExtensions Extension methods for IDataRecord objects"
  },
  "api/SQLHelperDB.ExtensionMethods.IDataRecordExtensions.html": {
    "href": "api/SQLHelperDB.ExtensionMethods.IDataRecordExtensions.html",
    "title": "Class IDataRecordExtensions | SQLHelper API Reference",
    "keywords": "Class IDataRecordExtensions Extension methods for IDataRecord objects Inheritance object IDataRecordExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SQLHelperDB.ExtensionMethods Assembly: SQLHelper.DB.dll Syntax public static class IDataRecordExtensions Methods | Improve this Doc View Source GetParameter<TDataType>(IDataRecord, int, TDataType) Returns a parameter's value Declaration public static TDataType GetParameter<TDataType>(this IDataRecord reader, int position, TDataType defaultValue = default) Parameters Type Name Description IDataRecord reader Reader object int position Position in the reader row TDataType defaultValue Default value for the parameter Returns Type Description TDataType if the parameter exists (and isn't null or empty), it returns the parameter's value. Otherwise the default value is returned. Type Parameters Name Description TDataType The type of the data type. | Improve this Doc View Source GetParameter<TDataType>(IDataRecord, string, TDataType) Returns a parameter's value Declaration public static TDataType GetParameter<TDataType>(this IDataRecord reader, string id, TDataType defaultValue = default) Parameters Type Name Description IDataRecord reader Reader object string id Parameter name TDataType defaultValue Default value for the parameter Returns Type Description TDataType if the parameter exists (and isn't null or empty), it returns the parameter's value. Otherwise the default value is returned. Type Parameters Name Description TDataType The type of the ata type."
  },
  "api/SQLHelperDB.HelperClasses.BaseClasses.html": {
    "href": "api/SQLHelperDB.HelperClasses.BaseClasses.html",
    "title": "Namespace SQLHelperDB.HelperClasses.BaseClasses | SQLHelper API Reference",
    "keywords": "Namespace SQLHelperDB.HelperClasses.BaseClasses Classes ParameterBase<TDataType> Parameter base class"
  },
  "api/SQLHelperDB.HelperClasses.BaseClasses.ParameterBase-1.html": {
    "href": "api/SQLHelperDB.HelperClasses.BaseClasses.ParameterBase-1.html",
    "title": "Class ParameterBase<TDataType> | SQLHelper API Reference",
    "keywords": "Class ParameterBase<TDataType> Parameter base class Inheritance object ParameterBase<TDataType> Parameter<TDataType> StringParameter Implements IParameter<TDataType> IParameter Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SQLHelperDB.HelperClasses.BaseClasses Assembly: SQLHelper.DB.dll Syntax public abstract class ParameterBase<TDataType> : IParameter<TDataType>, IParameter Type Parameters Name Description TDataType Data type of the parameter Constructors | Improve this Doc View Source ParameterBase(ParameterBase<TDataType>) Initializes a new instance of the ParameterBase<TDataType> class. Declaration protected ParameterBase(ParameterBase<TDataType> parameter) Parameters Type Name Description ParameterBase<TDataType> parameter The parameter. | Improve this Doc View Source ParameterBase(string, DbType, object?, ParameterDirection, string) Constructor Declaration protected ParameterBase(string id, DbType type, object? value = null, ParameterDirection direction = ParameterDirection.Input, string parameterStarter = \"@\") Parameters Type Name Description string id ID of the parameter DbType type Database type object value Value of the parameter ParameterDirection direction Direction of the parameter string parameterStarter What the database expects as the parameter starting string (\"@\" for SQL Server, \":\" for Oracle, etc.) | Improve this Doc View Source ParameterBase(string, SqlDbType, object?, ParameterDirection, string) Constructor Declaration protected ParameterBase(string id, SqlDbType type, object? value = null, ParameterDirection direction = ParameterDirection.Input, string parameterStarter = \"@\") Parameters Type Name Description string id ID of the parameter SqlDbType type Database type object value Value of the parameter ParameterDirection direction Direction of the parameter string parameterStarter What the database expects as the parameter starting string (\"@\" for SQL Server, \":\" for Oracle, etc.) | Improve this Doc View Source ParameterBase(string, TDataType, ParameterDirection, string) Constructor Declaration protected ParameterBase(string id, TDataType value, ParameterDirection direction = ParameterDirection.Input, string parameterStarter = \"@\") Parameters Type Name Description string id ID of the parameter TDataType value Value of the parameter ParameterDirection direction Direction of the parameter string parameterStarter What the database expects as the parameter starting string (\"@\" for SQL Server, \":\" for Oracle, etc.) Properties | Improve this Doc View Source BatchID Batch ID Declaration protected string BatchID { get; set; } Property Value Type Description string | Improve this Doc View Source DatabaseType Database type Declaration public DbType DatabaseType { get; set; } Property Value Type Description DbType | Improve this Doc View Source Direction Direction of the parameter Declaration public ParameterDirection Direction { get; set; } Property Value Type Description ParameterDirection | Improve this Doc View Source ID The Name that the parameter goes by Declaration public string ID { get; set; } Property Value Type Description string | Improve this Doc View Source InternalValue Gets the internal value. Declaration public object? InternalValue { get; } Property Value Type Description object The internal value. | Improve this Doc View Source ParameterStarter Starting string of the parameter Declaration public string ParameterStarter { get; set; } Property Value Type Description string | Improve this Doc View Source Value Parameter value Declaration public TDataType Value { get; set; } Property Value Type Description TDataType Methods | Improve this Doc View Source AddParameter(DbCommand) Adds this parameter to the SQLHelper Declaration public abstract void AddParameter(DbCommand helper) Parameters Type Name Description DbCommand helper SQLHelper | Improve this Doc View Source AddParameter(string) Finds itself in the string command and adds the value Declaration public string AddParameter(string command) Parameters Type Name Description string command Command to add to Returns Type Description string The resulting string | Improve this Doc View Source CreateCopy(string) Creates a copy of the parameter Declaration public abstract IParameter CreateCopy(string suffix) Parameters Type Name Description string suffix Suffix to add to the parameter (for batching purposes) Returns Type Description IParameter A copy of the parameter | Improve this Doc View Source Equals(object) Determines if the objects are equal Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Object to compare to Returns Type Description bool True if they are equal, false otherwise Overrides object.Equals(object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() | Improve this Doc View Source ToString() Returns the string version of the parameter Declaration public override string ToString() Returns Type Description string The string representation of the parameter Overrides object.ToString() Operators | Improve this Doc View Source operator ==(ParameterBase<TDataType>, ParameterBase<TDataType>) The == operator Declaration public static bool operator ==(ParameterBase<TDataType> first, ParameterBase<TDataType> second) Parameters Type Name Description ParameterBase<TDataType> first First item ParameterBase<TDataType> second Second item Returns Type Description bool true if the first and second item are the same, false otherwise | Improve this Doc View Source operator !=(ParameterBase<TDataType>, ParameterBase<TDataType>) != operator Declaration public static bool operator !=(ParameterBase<TDataType> first, ParameterBase<TDataType> second) Parameters Type Name Description ParameterBase<TDataType> first First item ParameterBase<TDataType> second Second item Returns Type Description bool returns true if they are not equal, false otherwise Implements IParameter<T> IParameter"
  },
  "api/SQLHelperDB.HelperClasses.Batch.html": {
    "href": "api/SQLHelperDB.HelperClasses.Batch.html",
    "title": "Class Batch | SQLHelper API Reference",
    "keywords": "Class Batch Holds information for a set of commands Inheritance object Batch Implements IBatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SQLHelperDB.HelperClasses Assembly: SQLHelper.DB.dll Syntax public class Batch : IBatch Constructors | Improve this Doc View Source Batch(IConnection, ObjectPool<StringBuilder>, ILogger?) Constructor Declaration public Batch(IConnection source, ObjectPool<StringBuilder> stringBuilderPool, ILogger? logger = null) Parameters Type Name Description IConnection source Source info ObjectPool<StringBuilder> stringBuilderPool The string builder pool. ILogger logger The logger. See Also IBatch Properties | Improve this Doc View Source CommandCount Command count Declaration public int CommandCount { get; } Property Value Type Description int See Also IBatch | Improve this Doc View Source Commands Commands to batch Declaration protected List<ICommand> Commands { get; } Property Value Type Description List<ICommand> See Also IBatch | Improve this Doc View Source Headers Gets the headers. Declaration protected List<ICommand> Headers { get; } Property Value Type Description List<ICommand> The headers. See Also IBatch | Improve this Doc View Source Source Connection string Declaration protected IConnection Source { get; } Property Value Type Description IConnection See Also IBatch | Improve this Doc View Source StringBuilderPool Gets the string builder pool. Declaration public ObjectPool<StringBuilder> StringBuilderPool { get; } Property Value Type Description ObjectPool<StringBuilder> The string builder pool. See Also IBatch Methods | Improve this Doc View Source AddQuery(IBatch) Adds a batch's commands to the current batch Declaration public IBatch AddQuery(IBatch batch) Parameters Type Name Description IBatch batch Batch to add Returns Type Description IBatch This See Also IBatch | Improve this Doc View Source AddQuery<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData>, TCallbackData, bool, string, CommandType, params object[]?) Adds a command to be batched Declaration public IBatch AddQuery<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData> callBack, TCallbackData callbackObject, bool header, string command, CommandType commandType, params object[]? parameters) Parameters Type Name Description Action<ICommand, List<dynamic>, TCallbackData> callBack Callback action TCallbackData callbackObject Object used in the callback action bool header Determines if this command is a \"header\" and should be carried across batches. string command Command (SQL or stored procedure) to run CommandType commandType Command type object[] parameters Parameters to add Returns Type Description IBatch This Type Parameters Name Description TCallbackData The type of the callback data. See Also IBatch | Improve this Doc View Source CheckTransaction() Checks whether a transaction is needed. Declaration protected bool CheckTransaction() Returns Type Description bool True if it is, false otherwise See Also IBatch | Improve this Doc View Source Clear() Clears this instance. Declaration public IBatch Clear() Returns Type Description IBatch This. See Also IBatch | Improve this Doc View Source ExecuteAsync() Executes the commands and returns the results (async) Declaration public Task<List<List<dynamic>>> ExecuteAsync() Returns Type Description Task<List<List<dynamic>>> The results of the batched commands See Also IBatch | Improve this Doc View Source RemoveDuplicateCommands() Removes duplicate commands from the batch Declaration public IBatch RemoveDuplicateCommands() Returns Type Description IBatch This See Also IBatch | Improve this Doc View Source SetConnection(IConnection) Sets the connection. Declaration public void SetConnection(IConnection databaseConnection) Parameters Type Name Description IConnection databaseConnection The database connection. See Also IBatch | Improve this Doc View Source ToString() Converts the batch to a string Declaration public override string ToString() Returns Type Description string Overrides object.ToString() See Also IBatch Implements IBatch See Also IBatch"
  },
  "api/SQLHelperDB.HelperClasses.Command-1.html": {
    "href": "api/SQLHelperDB.HelperClasses.Command-1.html",
    "title": "Class Command<TCallbackData> | SQLHelper API Reference",
    "keywords": "Class Command<TCallbackData> Command holder class Inheritance object Command<TCallbackData> Implements ICommand Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SQLHelperDB.HelperClasses Assembly: SQLHelper.DB.dll Syntax public class Command<TCallbackData> : ICommand Type Parameters Name Description TCallbackData The type of the callback data. Constructors | Improve this Doc View Source Command(Action<ICommand, List<dynamic>, TCallbackData>, TCallbackData, bool, string, CommandType, IParameter[]?) Constructor Declaration public Command(Action<ICommand, List<dynamic>, TCallbackData> callBack, TCallbackData callbackObject, bool header, string sqlCommand, CommandType commandType, IParameter[]? parameters) Parameters Type Name Description Action<ICommand, List<dynamic>, TCallbackData> callBack Called when command has been executed TCallbackData callbackObject Object bool header Determines if this command is a \"header\" and should be carried across batches. string sqlCommand SQL Command CommandType commandType Command type IParameter[] parameters Parameters See Also ICommand | Improve this Doc View Source Command(Action<ICommand, List<dynamic>, TCallbackData>, TCallbackData, bool, string, CommandType, string, object[]?) Constructor Declaration public Command(Action<ICommand, List<dynamic>, TCallbackData> callBack, TCallbackData callbackObject, bool header, string sqlCommand, CommandType commandType, string parameterStarter, object[]? parameters) Parameters Type Name Description Action<ICommand, List<dynamic>, TCallbackData> callBack Called when command has been executed TCallbackData callbackObject Object bool header Determines if this command is a \"header\" and should be carried across batches. string sqlCommand SQL Command CommandType commandType Command type string parameterStarter Parameter starter object[] parameters Parameters See Also ICommand Properties | Improve this Doc View Source CallBack Call back Declaration public Action<ICommand, List<dynamic>, TCallbackData> CallBack { get; } Property Value Type Description Action<ICommand, List<dynamic>, TCallbackData> See Also ICommand | Improve this Doc View Source CallbackData Object Declaration public TCallbackData CallbackData { get; } Property Value Type Description TCallbackData The object. See Also ICommand | Improve this Doc View Source CommandType Command type Declaration public CommandType CommandType { get; set; } Property Value Type Description CommandType See Also ICommand | Improve this Doc View Source Finalizable Used to determine if Finalize should be called. Declaration public bool Finalizable { get; } Property Value Type Description bool true if finalizable; otherwise, false. See Also ICommand | Improve this Doc View Source Header Determines if this command is a \"header\" and should be carried across batches. Declaration public bool Header { get; } Property Value Type Description bool true if header; otherwise, false. See Also ICommand | Improve this Doc View Source Parameters Parameters Declaration public IParameter[] Parameters { get; } Property Value Type Description IParameter[] See Also ICommand | Improve this Doc View Source SQLCommand SQL command Declaration public string SQLCommand { get; set; } Property Value Type Description string See Also ICommand | Improve this Doc View Source TransactionNeeded Gets a value indicating whether [transaction needed]. Declaration public bool TransactionNeeded { get; set; } Property Value Type Description bool true if [transaction needed]; otherwise, false. See Also ICommand Methods | Improve this Doc View Source Equals(object?) Determines if the objects are equal Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj Object to compare to Returns Type Description bool Determines if the commands are equal Overrides object.Equals(object) See Also ICommand | Improve this Doc View Source Finalize(List<dynamic>) Called after the command is run Declaration public void Finalize(List<dynamic> result) Parameters Type Name Description List<dynamic> result Result of the command See Also ICommand | Improve this Doc View Source GetHashCode() Returns the hash code for the command Declaration public override int GetHashCode() Returns Type Description int The hash code for the object Overrides object.GetHashCode() See Also ICommand | Improve this Doc View Source ToString() Returns the string representation of the command Declaration public override string ToString() Returns Type Description string The string representation of the command Overrides object.ToString() See Also ICommand Implements ICommand See Also ICommand"
  },
  "api/SQLHelperDB.HelperClasses.Connection.html": {
    "href": "api/SQLHelperDB.HelperClasses.Connection.html",
    "title": "Class Connection | SQLHelper API Reference",
    "keywords": "Class Connection Data source class Inheritance object Connection Implements IConnection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SQLHelperDB.HelperClasses Assembly: SQLHelper.DB.dll Syntax public class Connection : IConnection Constructors | Improve this Doc View Source Connection(IConfiguration, DbProviderFactory, string) Initializes a new instance of the Connection class. Declaration public Connection(IConfiguration configuration, DbProviderFactory factory, string name) Parameters Type Name Description IConfiguration configuration The configuration. DbProviderFactory factory The factory. string name The name. See Also IConnection | Improve this Doc View Source Connection(IConfiguration, DbProviderFactory, string, string, string, int) Constructor Declaration public Connection(IConfiguration configuration, DbProviderFactory factory, string connection, string name, string parameterPrefix = \"@\", int retries = 0) Parameters Type Name Description IConfiguration configuration The configuration. DbProviderFactory factory The factory. string connection The connection. string name The name. string parameterPrefix The parameter prefix. int retries The retries. Exceptions Type Condition ArgumentNullException configuration See Also IConnection Properties | Improve this Doc View Source CommandTimeout Gets the command timeout. Declaration public int CommandTimeout { get; } Property Value Type Description int The command timeout. See Also IConnection | Improve this Doc View Source ConnectionString Connection string Declaration public string ConnectionString { get; protected set; } Property Value Type Description string See Also IConnection | Improve this Doc View Source DatabaseName Gets the database. Declaration public string? DatabaseName { get; protected set; } Property Value Type Description string The database. See Also IConnection | Improve this Doc View Source Factory Gets the factory that the system uses to actually do the connection. Declaration public DbProviderFactory Factory { get; protected set; } Property Value Type Description DbProviderFactory The factory that the system needs to actually do the connection. See Also IConnection | Improve this Doc View Source Name Name of the source Declaration public string Name { get; protected set; } Property Value Type Description string The name. See Also IConnection | Improve this Doc View Source ParameterPrefix Parameter prefix that the source uses Declaration public string ParameterPrefix { get; protected set; } Property Value Type Description string The parameter prefix. See Also IConnection | Improve this Doc View Source Retries Gets the number of retries if unable to connect. Declaration public int Retries { get; protected set; } Property Value Type Description int The number of retries if unable to connect. See Also IConnection Implements IConnection See Also IConnection"
  },
  "api/SQLHelperDB.HelperClasses.html": {
    "href": "api/SQLHelperDB.HelperClasses.html",
    "title": "Namespace SQLHelperDB.HelperClasses | SQLHelper API Reference",
    "keywords": "Namespace SQLHelperDB.HelperClasses Classes Batch Holds information for a set of commands Command<TCallbackData> Command holder class Connection Data source class Parameter<TDataType> Holds parameter information SelectFinder Finds selects within SQL code. StringParameter Holds parameter information"
  },
  "api/SQLHelperDB.HelperClasses.Interfaces.html": {
    "href": "api/SQLHelperDB.HelperClasses.Interfaces.html",
    "title": "Namespace SQLHelperDB.HelperClasses.Interfaces | SQLHelper API Reference",
    "keywords": "Namespace SQLHelperDB.HelperClasses.Interfaces Interfaces IBatch A batch of commands interface ICommand Command interface IConnection Data source interface IParameter Parameter interface IParameter<T> Parameter interface"
  },
  "api/SQLHelperDB.HelperClasses.Interfaces.IBatch.html": {
    "href": "api/SQLHelperDB.HelperClasses.Interfaces.IBatch.html",
    "title": "Interface IBatch | SQLHelper API Reference",
    "keywords": "Interface IBatch A batch of commands interface Namespace: SQLHelperDB.HelperClasses.Interfaces Assembly: SQLHelper.DB.dll Syntax public interface IBatch Properties | Improve this Doc View Source CommandCount Number of commands being batched Declaration int CommandCount { get; } Property Value Type Description int Methods | Improve this Doc View Source AddQuery(IBatch) Adds a batch's commands to the current batch Declaration IBatch AddQuery(IBatch batch) Parameters Type Name Description IBatch batch Batch to add Returns Type Description IBatch This | Improve this Doc View Source AddQuery<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData>, TCallbackData, bool, string, CommandType, params object[]?) Adds a command to be batched Declaration IBatch AddQuery<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData> callBack, TCallbackData callbackObject, bool header, string command, CommandType commandType, params object[]? parameters) Parameters Type Name Description Action<ICommand, List<dynamic>, TCallbackData> callBack Callback action TCallbackData callbackObject Object used in the callback action bool header Determines if this command is a \"header\" and should be carried across batches. string command Command (SQL or stored procedure) to run CommandType commandType Command type object[] parameters Parameters to add Returns Type Description IBatch This Type Parameters Name Description TCallbackData The type of the callback data. | Improve this Doc View Source Clear() Clears this instance. Declaration IBatch Clear() Returns Type Description IBatch This. | Improve this Doc View Source ExecuteAsync() Executes the commands and returns the results (async) Declaration Task<List<List<dynamic>>> ExecuteAsync() Returns Type Description Task<List<List<dynamic>>> The results of the batched commands | Improve this Doc View Source RemoveDuplicateCommands() Removes duplicate commands from the batch Declaration IBatch RemoveDuplicateCommands() Returns Type Description IBatch This | Improve this Doc View Source SetConnection(IConnection) Sets the connection. Declaration void SetConnection(IConnection databaseConnection) Parameters Type Name Description IConnection databaseConnection The database connection."
  },
  "api/SQLHelperDB.HelperClasses.Interfaces.ICommand.html": {
    "href": "api/SQLHelperDB.HelperClasses.Interfaces.ICommand.html",
    "title": "Interface ICommand | SQLHelper API Reference",
    "keywords": "Interface ICommand Command interface Namespace: SQLHelperDB.HelperClasses.Interfaces Assembly: SQLHelper.DB.dll Syntax public interface ICommand Properties | Improve this Doc View Source CommandType Command type Declaration CommandType CommandType { get; } Property Value Type Description CommandType | Improve this Doc View Source Finalizable Gets a value indicating whether this ICommand is finalizable. Declaration bool Finalizable { get; } Property Value Type Description bool true if finalizable; otherwise, false. | Improve this Doc View Source Parameters Parameters associated with the command Declaration IParameter[] Parameters { get; } Property Value Type Description IParameter[] | Improve this Doc View Source SQLCommand Actual SQL command Declaration string SQLCommand { get; } Property Value Type Description string | Improve this Doc View Source TransactionNeeded Gets a value indicating whether [transaction needed]. Declaration bool TransactionNeeded { get; } Property Value Type Description bool true if [transaction needed]; otherwise, false. Methods | Improve this Doc View Source Finalize(List<dynamic>) Called after the command is run Declaration void Finalize(List<dynamic> result) Parameters Type Name Description List<dynamic> result Result of the command"
  },
  "api/SQLHelperDB.HelperClasses.Interfaces.IConnection.html": {
    "href": "api/SQLHelperDB.HelperClasses.Interfaces.IConnection.html",
    "title": "Interface IConnection | SQLHelper API Reference",
    "keywords": "Interface IConnection Data source interface Namespace: SQLHelperDB.HelperClasses.Interfaces Assembly: SQLHelper.DB.dll Syntax public interface IConnection Properties | Improve this Doc View Source ConnectionString Connection string Declaration string ConnectionString { get; } Property Value Type Description string The connection. | Improve this Doc View Source DatabaseName Gets the database. Declaration string? DatabaseName { get; } Property Value Type Description string The database. | Improve this Doc View Source Factory Gets the factory that the system uses to actually do the connection. Declaration DbProviderFactory Factory { get; } Property Value Type Description DbProviderFactory The factory that the system needs to actually do the connection. | Improve this Doc View Source Name Name of the source Declaration string Name { get; } Property Value Type Description string The name. | Improve this Doc View Source ParameterPrefix Parameter prefix that the source uses Declaration string ParameterPrefix { get; } Property Value Type Description string The parameter prefix. | Improve this Doc View Source Retries Gets the number of retries if unable to connect. Declaration int Retries { get; } Property Value Type Description int The number of retries if unable to connect."
  },
  "api/SQLHelperDB.HelperClasses.Interfaces.IParameter-1.html": {
    "href": "api/SQLHelperDB.HelperClasses.Interfaces.IParameter-1.html",
    "title": "Interface IParameter<T> | SQLHelper API Reference",
    "keywords": "Interface IParameter<T> Parameter interface Inherited Members IParameter.DatabaseType IParameter.Direction IParameter.ID IParameter.InternalValue IParameter.ParameterStarter IParameter.AddParameter(DbCommand) IParameter.AddParameter(string) IParameter.CreateCopy(string) Namespace: SQLHelperDB.HelperClasses.Interfaces Assembly: SQLHelper.DB.dll Syntax public interface IParameter<T> : IParameter Type Parameters Name Description T Value type Properties | Improve this Doc View Source Value The value that the parameter is associated with Declaration T Value { get; set; } Property Value Type Description T"
  },
  "api/SQLHelperDB.HelperClasses.Interfaces.IParameter.html": {
    "href": "api/SQLHelperDB.HelperClasses.Interfaces.IParameter.html",
    "title": "Interface IParameter | SQLHelper API Reference",
    "keywords": "Interface IParameter Parameter interface Namespace: SQLHelperDB.HelperClasses.Interfaces Assembly: SQLHelper.DB.dll Syntax public interface IParameter Properties | Improve this Doc View Source DatabaseType Database type Declaration DbType DatabaseType { get; set; } Property Value Type Description DbType | Improve this Doc View Source Direction Direction of the parameter Declaration ParameterDirection Direction { get; set; } Property Value Type Description ParameterDirection | Improve this Doc View Source ID The name that the parameter goes by Declaration string ID { get; set; } Property Value Type Description string | Improve this Doc View Source InternalValue Gets the internal value. Declaration object? InternalValue { get; } Property Value Type Description object The internal value. | Improve this Doc View Source ParameterStarter Gets the parameter starter. Declaration string ParameterStarter { get; } Property Value Type Description string The parameter starter. Methods | Improve this Doc View Source AddParameter(DbCommand) Adds this parameter to the SQLHelper Declaration void AddParameter(DbCommand helper) Parameters Type Name Description DbCommand helper SQLHelper | Improve this Doc View Source AddParameter(string) Finds itself in the string command and adds the value Declaration string AddParameter(string command) Parameters Type Name Description string command Command to add to Returns Type Description string The resulting string | Improve this Doc View Source CreateCopy(string) Creates a copy of the parameter Declaration IParameter CreateCopy(string suffix) Parameters Type Name Description string suffix Suffix to add to the parameter (for batching purposes) Returns Type Description IParameter A copy of the parameter"
  },
  "api/SQLHelperDB.HelperClasses.Parameter-1.html": {
    "href": "api/SQLHelperDB.HelperClasses.Parameter-1.html",
    "title": "Class Parameter<TDataType> | SQLHelper API Reference",
    "keywords": "Class Parameter<TDataType> Holds parameter information Inheritance object ParameterBase<TDataType> Parameter<TDataType> Implements IParameter<TDataType> IParameter Inherited Members ParameterBase<TDataType>.DatabaseType ParameterBase<TDataType>.Direction ParameterBase<TDataType>.ID ParameterBase<TDataType>.InternalValue ParameterBase<TDataType>.ParameterStarter ParameterBase<TDataType>.Value ParameterBase<TDataType>.BatchID ParameterBase<TDataType>.AddParameter(string) ParameterBase<TDataType>.Equals(object) ParameterBase<TDataType>.GetHashCode() ParameterBase<TDataType>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SQLHelperDB.HelperClasses Assembly: SQLHelper.DB.dll Syntax public class Parameter<TDataType> : ParameterBase<TDataType>, IParameter<TDataType>, IParameter Type Parameters Name Description TDataType Data type of the parameter Constructors | Improve this Doc View Source Parameter(string, DbType, object?, ParameterDirection, string) Constructor Declaration public Parameter(string id, DbType type, object? value = null, ParameterDirection direction = ParameterDirection.Input, string parameterStarter = \"@\") Parameters Type Name Description string id ID of the parameter DbType type Database type object value Value of the parameter ParameterDirection direction Direction of the parameter string parameterStarter Parameter starter | Improve this Doc View Source Parameter(string, SqlDbType, object?, ParameterDirection, string) Constructor Declaration public Parameter(string id, SqlDbType type, object? value = null, ParameterDirection direction = ParameterDirection.Input, string parameterStarter = \"@\") Parameters Type Name Description string id ID of the parameter SqlDbType type Database type object value Value of the parameter ParameterDirection direction Direction of the parameter string parameterStarter Parameter starter | Improve this Doc View Source Parameter(string, TDataType, ParameterDirection, string) Constructor Declaration public Parameter(string id, TDataType value, ParameterDirection direction = ParameterDirection.Input, string parameterStarter = \"@\") Parameters Type Name Description string id ID of the parameter TDataType value Value of the parameter ParameterDirection direction Direction of the parameter string parameterStarter Parameter starter Methods | Improve this Doc View Source AddParameter(DbCommand) Adds this parameter to the SQLHelper Declaration public override void AddParameter(DbCommand helper) Parameters Type Name Description DbCommand helper SQLHelper Overrides ParameterBase<TDataType>.AddParameter(DbCommand) | Improve this Doc View Source CreateCopy(string) Creates a copy of the parameter Declaration public override IParameter CreateCopy(string suffix) Parameters Type Name Description string suffix Suffix to add to the parameter (for batching purposes) Returns Type Description IParameter A copy of the parameter Overrides ParameterBase<TDataType>.CreateCopy(string) Implements IParameter<T> IParameter"
  },
  "api/SQLHelperDB.HelperClasses.SelectFinder.html": {
    "href": "api/SQLHelperDB.HelperClasses.SelectFinder.html",
    "title": "Class SelectFinder | SQLHelper API Reference",
    "keywords": "Class SelectFinder Finds selects within SQL code. Inheritance object TSqlParserBaseListener SelectFinder Implements ITSqlParserListener IParseTreeListener Inherited Members TSqlParserBaseListener.EnterTsql_file(TSqlParser.Tsql_fileContext) TSqlParserBaseListener.ExitTsql_file(TSqlParser.Tsql_fileContext) TSqlParserBaseListener.EnterBatch(TSqlParser.BatchContext) TSqlParserBaseListener.ExitBatch(TSqlParser.BatchContext) TSqlParserBaseListener.EnterBatch_level_statement(TSqlParser.Batch_level_statementContext) TSqlParserBaseListener.ExitBatch_level_statement(TSqlParser.Batch_level_statementContext) TSqlParserBaseListener.EnterSql_clauses(TSqlParser.Sql_clausesContext) TSqlParserBaseListener.ExitSql_clauses(TSqlParser.Sql_clausesContext) TSqlParserBaseListener.ExitDml_clause(TSqlParser.Dml_clauseContext) TSqlParserBaseListener.EnterDdl_clause(TSqlParser.Ddl_clauseContext) TSqlParserBaseListener.ExitDdl_clause(TSqlParser.Ddl_clauseContext) TSqlParserBaseListener.EnterBackup_statement(TSqlParser.Backup_statementContext) TSqlParserBaseListener.ExitBackup_statement(TSqlParser.Backup_statementContext) TSqlParserBaseListener.EnterCfl_statement(TSqlParser.Cfl_statementContext) TSqlParserBaseListener.ExitCfl_statement(TSqlParser.Cfl_statementContext) TSqlParserBaseListener.EnterBlock_statement(TSqlParser.Block_statementContext) TSqlParserBaseListener.ExitBlock_statement(TSqlParser.Block_statementContext) TSqlParserBaseListener.EnterBreak_statement(TSqlParser.Break_statementContext) TSqlParserBaseListener.ExitBreak_statement(TSqlParser.Break_statementContext) TSqlParserBaseListener.EnterContinue_statement(TSqlParser.Continue_statementContext) TSqlParserBaseListener.ExitContinue_statement(TSqlParser.Continue_statementContext) TSqlParserBaseListener.EnterGoto_statement(TSqlParser.Goto_statementContext) TSqlParserBaseListener.ExitGoto_statement(TSqlParser.Goto_statementContext) TSqlParserBaseListener.EnterReturn_statement(TSqlParser.Return_statementContext) TSqlParserBaseListener.ExitReturn_statement(TSqlParser.Return_statementContext) TSqlParserBaseListener.EnterIf_statement(TSqlParser.If_statementContext) TSqlParserBaseListener.ExitIf_statement(TSqlParser.If_statementContext) TSqlParserBaseListener.EnterThrow_statement(TSqlParser.Throw_statementContext) TSqlParserBaseListener.ExitThrow_statement(TSqlParser.Throw_statementContext) TSqlParserBaseListener.EnterThrow_error_number(TSqlParser.Throw_error_numberContext) TSqlParserBaseListener.ExitThrow_error_number(TSqlParser.Throw_error_numberContext) TSqlParserBaseListener.EnterThrow_message(TSqlParser.Throw_messageContext) TSqlParserBaseListener.ExitThrow_message(TSqlParser.Throw_messageContext) TSqlParserBaseListener.EnterThrow_state(TSqlParser.Throw_stateContext) TSqlParserBaseListener.ExitThrow_state(TSqlParser.Throw_stateContext) TSqlParserBaseListener.EnterTry_catch_statement(TSqlParser.Try_catch_statementContext) TSqlParserBaseListener.ExitTry_catch_statement(TSqlParser.Try_catch_statementContext) TSqlParserBaseListener.EnterWaitfor_statement(TSqlParser.Waitfor_statementContext) TSqlParserBaseListener.ExitWaitfor_statement(TSqlParser.Waitfor_statementContext) TSqlParserBaseListener.EnterWhile_statement(TSqlParser.While_statementContext) TSqlParserBaseListener.ExitWhile_statement(TSqlParser.While_statementContext) TSqlParserBaseListener.EnterPrint_statement(TSqlParser.Print_statementContext) TSqlParserBaseListener.ExitPrint_statement(TSqlParser.Print_statementContext) TSqlParserBaseListener.EnterRaiseerror_statement(TSqlParser.Raiseerror_statementContext) TSqlParserBaseListener.ExitRaiseerror_statement(TSqlParser.Raiseerror_statementContext) TSqlParserBaseListener.EnterEmpty_statement(TSqlParser.Empty_statementContext) TSqlParserBaseListener.ExitEmpty_statement(TSqlParser.Empty_statementContext) TSqlParserBaseListener.EnterAnother_statement(TSqlParser.Another_statementContext) TSqlParserBaseListener.ExitAnother_statement(TSqlParser.Another_statementContext) TSqlParserBaseListener.EnterAlter_application_role(TSqlParser.Alter_application_roleContext) TSqlParserBaseListener.ExitAlter_application_role(TSqlParser.Alter_application_roleContext) TSqlParserBaseListener.EnterCreate_application_role(TSqlParser.Create_application_roleContext) TSqlParserBaseListener.ExitCreate_application_role(TSqlParser.Create_application_roleContext) TSqlParserBaseListener.EnterDrop_aggregate(TSqlParser.Drop_aggregateContext) TSqlParserBaseListener.ExitDrop_aggregate(TSqlParser.Drop_aggregateContext) TSqlParserBaseListener.EnterDrop_application_role(TSqlParser.Drop_application_roleContext) TSqlParserBaseListener.ExitDrop_application_role(TSqlParser.Drop_application_roleContext) TSqlParserBaseListener.EnterAlter_assembly(TSqlParser.Alter_assemblyContext) TSqlParserBaseListener.ExitAlter_assembly(TSqlParser.Alter_assemblyContext) TSqlParserBaseListener.EnterAlter_assembly_start(TSqlParser.Alter_assembly_startContext) TSqlParserBaseListener.ExitAlter_assembly_start(TSqlParser.Alter_assembly_startContext) TSqlParserBaseListener.EnterAlter_assembly_clause(TSqlParser.Alter_assembly_clauseContext) TSqlParserBaseListener.ExitAlter_assembly_clause(TSqlParser.Alter_assembly_clauseContext) TSqlParserBaseListener.EnterAlter_assembly_from_clause(TSqlParser.Alter_assembly_from_clauseContext) TSqlParserBaseListener.ExitAlter_assembly_from_clause(TSqlParser.Alter_assembly_from_clauseContext) TSqlParserBaseListener.EnterAlter_assembly_from_clause_start(TSqlParser.Alter_assembly_from_clause_startContext) TSqlParserBaseListener.ExitAlter_assembly_from_clause_start(TSqlParser.Alter_assembly_from_clause_startContext) TSqlParserBaseListener.EnterAlter_assembly_drop_clause(TSqlParser.Alter_assembly_drop_clauseContext) TSqlParserBaseListener.ExitAlter_assembly_drop_clause(TSqlParser.Alter_assembly_drop_clauseContext) TSqlParserBaseListener.EnterAlter_assembly_drop_multiple_files(TSqlParser.Alter_assembly_drop_multiple_filesContext) TSqlParserBaseListener.ExitAlter_assembly_drop_multiple_files(TSqlParser.Alter_assembly_drop_multiple_filesContext) TSqlParserBaseListener.EnterAlter_assembly_drop(TSqlParser.Alter_assembly_dropContext) TSqlParserBaseListener.ExitAlter_assembly_drop(TSqlParser.Alter_assembly_dropContext) TSqlParserBaseListener.EnterAlter_assembly_add_clause(TSqlParser.Alter_assembly_add_clauseContext) TSqlParserBaseListener.ExitAlter_assembly_add_clause(TSqlParser.Alter_assembly_add_clauseContext) TSqlParserBaseListener.EnterAlter_asssembly_add_clause_start(TSqlParser.Alter_asssembly_add_clause_startContext) TSqlParserBaseListener.ExitAlter_asssembly_add_clause_start(TSqlParser.Alter_asssembly_add_clause_startContext) TSqlParserBaseListener.EnterAlter_assembly_client_file_clause(TSqlParser.Alter_assembly_client_file_clauseContext) TSqlParserBaseListener.ExitAlter_assembly_client_file_clause(TSqlParser.Alter_assembly_client_file_clauseContext) TSqlParserBaseListener.EnterAlter_assembly_file_name(TSqlParser.Alter_assembly_file_nameContext) TSqlParserBaseListener.ExitAlter_assembly_file_name(TSqlParser.Alter_assembly_file_nameContext) TSqlParserBaseListener.EnterAlter_assembly_file_bits(TSqlParser.Alter_assembly_file_bitsContext) TSqlParserBaseListener.ExitAlter_assembly_file_bits(TSqlParser.Alter_assembly_file_bitsContext) TSqlParserBaseListener.EnterAlter_assembly_as(TSqlParser.Alter_assembly_asContext) TSqlParserBaseListener.ExitAlter_assembly_as(TSqlParser.Alter_assembly_asContext) TSqlParserBaseListener.EnterAlter_assembly_with_clause(TSqlParser.Alter_assembly_with_clauseContext) TSqlParserBaseListener.ExitAlter_assembly_with_clause(TSqlParser.Alter_assembly_with_clauseContext) TSqlParserBaseListener.EnterAlter_assembly_with(TSqlParser.Alter_assembly_withContext) TSqlParserBaseListener.ExitAlter_assembly_with(TSqlParser.Alter_assembly_withContext) TSqlParserBaseListener.EnterClient_assembly_specifier(TSqlParser.Client_assembly_specifierContext) TSqlParserBaseListener.ExitClient_assembly_specifier(TSqlParser.Client_assembly_specifierContext) TSqlParserBaseListener.EnterAssembly_option(TSqlParser.Assembly_optionContext) TSqlParserBaseListener.ExitAssembly_option(TSqlParser.Assembly_optionContext) TSqlParserBaseListener.EnterNetwork_file_share(TSqlParser.Network_file_shareContext) TSqlParserBaseListener.ExitNetwork_file_share(TSqlParser.Network_file_shareContext) TSqlParserBaseListener.EnterNetwork_computer(TSqlParser.Network_computerContext) TSqlParserBaseListener.ExitNetwork_computer(TSqlParser.Network_computerContext) TSqlParserBaseListener.EnterNetwork_file_start(TSqlParser.Network_file_startContext) TSqlParserBaseListener.ExitNetwork_file_start(TSqlParser.Network_file_startContext) TSqlParserBaseListener.EnterFile_path(TSqlParser.File_pathContext) TSqlParserBaseListener.ExitFile_path(TSqlParser.File_pathContext) TSqlParserBaseListener.EnterFile_directory_path_separator(TSqlParser.File_directory_path_separatorContext) TSqlParserBaseListener.ExitFile_directory_path_separator(TSqlParser.File_directory_path_separatorContext) TSqlParserBaseListener.EnterLocal_file(TSqlParser.Local_fileContext) TSqlParserBaseListener.ExitLocal_file(TSqlParser.Local_fileContext) TSqlParserBaseListener.EnterLocal_drive(TSqlParser.Local_driveContext) TSqlParserBaseListener.ExitLocal_drive(TSqlParser.Local_driveContext) TSqlParserBaseListener.EnterMultiple_local_files(TSqlParser.Multiple_local_filesContext) TSqlParserBaseListener.ExitMultiple_local_files(TSqlParser.Multiple_local_filesContext) TSqlParserBaseListener.EnterMultiple_local_file_start(TSqlParser.Multiple_local_file_startContext) TSqlParserBaseListener.ExitMultiple_local_file_start(TSqlParser.Multiple_local_file_startContext) TSqlParserBaseListener.EnterCreate_assembly(TSqlParser.Create_assemblyContext) TSqlParserBaseListener.ExitCreate_assembly(TSqlParser.Create_assemblyContext) TSqlParserBaseListener.EnterDrop_assembly(TSqlParser.Drop_assemblyContext) TSqlParserBaseListener.ExitDrop_assembly(TSqlParser.Drop_assemblyContext) TSqlParserBaseListener.EnterAlter_asymmetric_key(TSqlParser.Alter_asymmetric_keyContext) TSqlParserBaseListener.ExitAlter_asymmetric_key(TSqlParser.Alter_asymmetric_keyContext) TSqlParserBaseListener.EnterAlter_asymmetric_key_start(TSqlParser.Alter_asymmetric_key_startContext) TSqlParserBaseListener.ExitAlter_asymmetric_key_start(TSqlParser.Alter_asymmetric_key_startContext) TSqlParserBaseListener.EnterAsymmetric_key_option(TSqlParser.Asymmetric_key_optionContext) TSqlParserBaseListener.ExitAsymmetric_key_option(TSqlParser.Asymmetric_key_optionContext) TSqlParserBaseListener.EnterAsymmetric_key_option_start(TSqlParser.Asymmetric_key_option_startContext) TSqlParserBaseListener.ExitAsymmetric_key_option_start(TSqlParser.Asymmetric_key_option_startContext) TSqlParserBaseListener.EnterAsymmetric_key_password_change_option(TSqlParser.Asymmetric_key_password_change_optionContext) TSqlParserBaseListener.ExitAsymmetric_key_password_change_option(TSqlParser.Asymmetric_key_password_change_optionContext) TSqlParserBaseListener.EnterCreate_asymmetric_key(TSqlParser.Create_asymmetric_keyContext) TSqlParserBaseListener.ExitCreate_asymmetric_key(TSqlParser.Create_asymmetric_keyContext) TSqlParserBaseListener.EnterDrop_asymmetric_key(TSqlParser.Drop_asymmetric_keyContext) TSqlParserBaseListener.ExitDrop_asymmetric_key(TSqlParser.Drop_asymmetric_keyContext) TSqlParserBaseListener.EnterAlter_authorization(TSqlParser.Alter_authorizationContext) TSqlParserBaseListener.ExitAlter_authorization(TSqlParser.Alter_authorizationContext) TSqlParserBaseListener.EnterAuthorization_grantee(TSqlParser.Authorization_granteeContext) TSqlParserBaseListener.ExitAuthorization_grantee(TSqlParser.Authorization_granteeContext) TSqlParserBaseListener.EnterEntity_to(TSqlParser.Entity_toContext) TSqlParserBaseListener.ExitEntity_to(TSqlParser.Entity_toContext) TSqlParserBaseListener.EnterColon_colon(TSqlParser.Colon_colonContext) TSqlParserBaseListener.ExitColon_colon(TSqlParser.Colon_colonContext) TSqlParserBaseListener.EnterAlter_authorization_start(TSqlParser.Alter_authorization_startContext) TSqlParserBaseListener.ExitAlter_authorization_start(TSqlParser.Alter_authorization_startContext) TSqlParserBaseListener.EnterAlter_authorization_for_sql_database(TSqlParser.Alter_authorization_for_sql_databaseContext) TSqlParserBaseListener.ExitAlter_authorization_for_sql_database(TSqlParser.Alter_authorization_for_sql_databaseContext) TSqlParserBaseListener.EnterAlter_authorization_for_azure_dw(TSqlParser.Alter_authorization_for_azure_dwContext) TSqlParserBaseListener.ExitAlter_authorization_for_azure_dw(TSqlParser.Alter_authorization_for_azure_dwContext) TSqlParserBaseListener.EnterAlter_authorization_for_parallel_dw(TSqlParser.Alter_authorization_for_parallel_dwContext) TSqlParserBaseListener.ExitAlter_authorization_for_parallel_dw(TSqlParser.Alter_authorization_for_parallel_dwContext) TSqlParserBaseListener.EnterClass_type(TSqlParser.Class_typeContext) TSqlParserBaseListener.ExitClass_type(TSqlParser.Class_typeContext) TSqlParserBaseListener.EnterClass_type_for_sql_database(TSqlParser.Class_type_for_sql_databaseContext) TSqlParserBaseListener.ExitClass_type_for_sql_database(TSqlParser.Class_type_for_sql_databaseContext) TSqlParserBaseListener.EnterClass_type_for_azure_dw(TSqlParser.Class_type_for_azure_dwContext) TSqlParserBaseListener.ExitClass_type_for_azure_dw(TSqlParser.Class_type_for_azure_dwContext) TSqlParserBaseListener.EnterClass_type_for_parallel_dw(TSqlParser.Class_type_for_parallel_dwContext) TSqlParserBaseListener.ExitClass_type_for_parallel_dw(TSqlParser.Class_type_for_parallel_dwContext) TSqlParserBaseListener.EnterClass_type_for_grant(TSqlParser.Class_type_for_grantContext) TSqlParserBaseListener.ExitClass_type_for_grant(TSqlParser.Class_type_for_grantContext) TSqlParserBaseListener.EnterDrop_availability_group(TSqlParser.Drop_availability_groupContext) TSqlParserBaseListener.ExitDrop_availability_group(TSqlParser.Drop_availability_groupContext) TSqlParserBaseListener.EnterAlter_availability_group(TSqlParser.Alter_availability_groupContext) TSqlParserBaseListener.ExitAlter_availability_group(TSqlParser.Alter_availability_groupContext) TSqlParserBaseListener.EnterAlter_availability_group_start(TSqlParser.Alter_availability_group_startContext) TSqlParserBaseListener.ExitAlter_availability_group_start(TSqlParser.Alter_availability_group_startContext) TSqlParserBaseListener.EnterAlter_availability_group_options(TSqlParser.Alter_availability_group_optionsContext) TSqlParserBaseListener.ExitAlter_availability_group_options(TSqlParser.Alter_availability_group_optionsContext) TSqlParserBaseListener.EnterIp_v4_failover(TSqlParser.Ip_v4_failoverContext) TSqlParserBaseListener.ExitIp_v4_failover(TSqlParser.Ip_v4_failoverContext) TSqlParserBaseListener.EnterIp_v6_failover(TSqlParser.Ip_v6_failoverContext) TSqlParserBaseListener.ExitIp_v6_failover(TSqlParser.Ip_v6_failoverContext) TSqlParserBaseListener.EnterCreate_or_alter_broker_priority(TSqlParser.Create_or_alter_broker_priorityContext) TSqlParserBaseListener.ExitCreate_or_alter_broker_priority(TSqlParser.Create_or_alter_broker_priorityContext) TSqlParserBaseListener.EnterDrop_broker_priority(TSqlParser.Drop_broker_priorityContext) TSqlParserBaseListener.ExitDrop_broker_priority(TSqlParser.Drop_broker_priorityContext) TSqlParserBaseListener.EnterAlter_certificate(TSqlParser.Alter_certificateContext) TSqlParserBaseListener.ExitAlter_certificate(TSqlParser.Alter_certificateContext) TSqlParserBaseListener.EnterAlter_column_encryption_key(TSqlParser.Alter_column_encryption_keyContext) TSqlParserBaseListener.ExitAlter_column_encryption_key(TSqlParser.Alter_column_encryption_keyContext) TSqlParserBaseListener.EnterCreate_column_encryption_key(TSqlParser.Create_column_encryption_keyContext) TSqlParserBaseListener.ExitCreate_column_encryption_key(TSqlParser.Create_column_encryption_keyContext) TSqlParserBaseListener.EnterDrop_certificate(TSqlParser.Drop_certificateContext) TSqlParserBaseListener.ExitDrop_certificate(TSqlParser.Drop_certificateContext) TSqlParserBaseListener.EnterDrop_column_encryption_key(TSqlParser.Drop_column_encryption_keyContext) TSqlParserBaseListener.ExitDrop_column_encryption_key(TSqlParser.Drop_column_encryption_keyContext) TSqlParserBaseListener.EnterDrop_column_master_key(TSqlParser.Drop_column_master_keyContext) TSqlParserBaseListener.ExitDrop_column_master_key(TSqlParser.Drop_column_master_keyContext) TSqlParserBaseListener.EnterDrop_contract(TSqlParser.Drop_contractContext) TSqlParserBaseListener.ExitDrop_contract(TSqlParser.Drop_contractContext) TSqlParserBaseListener.EnterDrop_credential(TSqlParser.Drop_credentialContext) TSqlParserBaseListener.ExitDrop_credential(TSqlParser.Drop_credentialContext) TSqlParserBaseListener.EnterDrop_cryptograhic_provider(TSqlParser.Drop_cryptograhic_providerContext) TSqlParserBaseListener.ExitDrop_cryptograhic_provider(TSqlParser.Drop_cryptograhic_providerContext) TSqlParserBaseListener.EnterDrop_database(TSqlParser.Drop_databaseContext) TSqlParserBaseListener.ExitDrop_database(TSqlParser.Drop_databaseContext) TSqlParserBaseListener.EnterDrop_database_audit_specification(TSqlParser.Drop_database_audit_specificationContext) TSqlParserBaseListener.ExitDrop_database_audit_specification(TSqlParser.Drop_database_audit_specificationContext) TSqlParserBaseListener.EnterDrop_database_encryption_key(TSqlParser.Drop_database_encryption_keyContext) TSqlParserBaseListener.ExitDrop_database_encryption_key(TSqlParser.Drop_database_encryption_keyContext) TSqlParserBaseListener.EnterDrop_database_scoped_credential(TSqlParser.Drop_database_scoped_credentialContext) TSqlParserBaseListener.ExitDrop_database_scoped_credential(TSqlParser.Drop_database_scoped_credentialContext) TSqlParserBaseListener.EnterDrop_default(TSqlParser.Drop_defaultContext) TSqlParserBaseListener.ExitDrop_default(TSqlParser.Drop_defaultContext) TSqlParserBaseListener.EnterDrop_endpoint(TSqlParser.Drop_endpointContext) TSqlParserBaseListener.ExitDrop_endpoint(TSqlParser.Drop_endpointContext) TSqlParserBaseListener.EnterDrop_external_data_source(TSqlParser.Drop_external_data_sourceContext) TSqlParserBaseListener.ExitDrop_external_data_source(TSqlParser.Drop_external_data_sourceContext) TSqlParserBaseListener.EnterDrop_external_file_format(TSqlParser.Drop_external_file_formatContext) TSqlParserBaseListener.ExitDrop_external_file_format(TSqlParser.Drop_external_file_formatContext) TSqlParserBaseListener.EnterDrop_external_library(TSqlParser.Drop_external_libraryContext) TSqlParserBaseListener.ExitDrop_external_library(TSqlParser.Drop_external_libraryContext) TSqlParserBaseListener.EnterDrop_external_resource_pool(TSqlParser.Drop_external_resource_poolContext) TSqlParserBaseListener.ExitDrop_external_resource_pool(TSqlParser.Drop_external_resource_poolContext) TSqlParserBaseListener.EnterDrop_external_table(TSqlParser.Drop_external_tableContext) TSqlParserBaseListener.ExitDrop_external_table(TSqlParser.Drop_external_tableContext) TSqlParserBaseListener.EnterDrop_event_notifications(TSqlParser.Drop_event_notificationsContext) TSqlParserBaseListener.ExitDrop_event_notifications(TSqlParser.Drop_event_notificationsContext) TSqlParserBaseListener.EnterDrop_event_session(TSqlParser.Drop_event_sessionContext) TSqlParserBaseListener.ExitDrop_event_session(TSqlParser.Drop_event_sessionContext) TSqlParserBaseListener.EnterDrop_fulltext_catalog(TSqlParser.Drop_fulltext_catalogContext) TSqlParserBaseListener.ExitDrop_fulltext_catalog(TSqlParser.Drop_fulltext_catalogContext) TSqlParserBaseListener.EnterDrop_fulltext_index(TSqlParser.Drop_fulltext_indexContext) TSqlParserBaseListener.ExitDrop_fulltext_index(TSqlParser.Drop_fulltext_indexContext) TSqlParserBaseListener.EnterDrop_fulltext_stoplist(TSqlParser.Drop_fulltext_stoplistContext) TSqlParserBaseListener.ExitDrop_fulltext_stoplist(TSqlParser.Drop_fulltext_stoplistContext) TSqlParserBaseListener.EnterDrop_login(TSqlParser.Drop_loginContext) TSqlParserBaseListener.ExitDrop_login(TSqlParser.Drop_loginContext) TSqlParserBaseListener.EnterDrop_master_key(TSqlParser.Drop_master_keyContext) TSqlParserBaseListener.ExitDrop_master_key(TSqlParser.Drop_master_keyContext) TSqlParserBaseListener.EnterDrop_message_type(TSqlParser.Drop_message_typeContext) TSqlParserBaseListener.ExitDrop_message_type(TSqlParser.Drop_message_typeContext) TSqlParserBaseListener.EnterDrop_partition_function(TSqlParser.Drop_partition_functionContext) TSqlParserBaseListener.ExitDrop_partition_function(TSqlParser.Drop_partition_functionContext) TSqlParserBaseListener.EnterDrop_partition_scheme(TSqlParser.Drop_partition_schemeContext) TSqlParserBaseListener.ExitDrop_partition_scheme(TSqlParser.Drop_partition_schemeContext) TSqlParserBaseListener.EnterDrop_queue(TSqlParser.Drop_queueContext) TSqlParserBaseListener.ExitDrop_queue(TSqlParser.Drop_queueContext) TSqlParserBaseListener.EnterDrop_remote_service_binding(TSqlParser.Drop_remote_service_bindingContext) TSqlParserBaseListener.ExitDrop_remote_service_binding(TSqlParser.Drop_remote_service_bindingContext) TSqlParserBaseListener.EnterDrop_resource_pool(TSqlParser.Drop_resource_poolContext) TSqlParserBaseListener.ExitDrop_resource_pool(TSqlParser.Drop_resource_poolContext) TSqlParserBaseListener.EnterDrop_db_role(TSqlParser.Drop_db_roleContext) TSqlParserBaseListener.ExitDrop_db_role(TSqlParser.Drop_db_roleContext) TSqlParserBaseListener.EnterDrop_route(TSqlParser.Drop_routeContext) TSqlParserBaseListener.ExitDrop_route(TSqlParser.Drop_routeContext) TSqlParserBaseListener.EnterDrop_rule(TSqlParser.Drop_ruleContext) TSqlParserBaseListener.ExitDrop_rule(TSqlParser.Drop_ruleContext) TSqlParserBaseListener.EnterDrop_schema(TSqlParser.Drop_schemaContext) TSqlParserBaseListener.ExitDrop_schema(TSqlParser.Drop_schemaContext) TSqlParserBaseListener.EnterDrop_search_property_list(TSqlParser.Drop_search_property_listContext) TSqlParserBaseListener.ExitDrop_search_property_list(TSqlParser.Drop_search_property_listContext) TSqlParserBaseListener.EnterDrop_security_policy(TSqlParser.Drop_security_policyContext) TSqlParserBaseListener.ExitDrop_security_policy(TSqlParser.Drop_security_policyContext) TSqlParserBaseListener.EnterDrop_sequence(TSqlParser.Drop_sequenceContext) TSqlParserBaseListener.ExitDrop_sequence(TSqlParser.Drop_sequenceContext) TSqlParserBaseListener.EnterDrop_server_audit(TSqlParser.Drop_server_auditContext) TSqlParserBaseListener.ExitDrop_server_audit(TSqlParser.Drop_server_auditContext) TSqlParserBaseListener.EnterDrop_server_audit_specification(TSqlParser.Drop_server_audit_specificationContext) TSqlParserBaseListener.ExitDrop_server_audit_specification(TSqlParser.Drop_server_audit_specificationContext) TSqlParserBaseListener.EnterDrop_server_role(TSqlParser.Drop_server_roleContext) TSqlParserBaseListener.ExitDrop_server_role(TSqlParser.Drop_server_roleContext) TSqlParserBaseListener.EnterDrop_service(TSqlParser.Drop_serviceContext) TSqlParserBaseListener.ExitDrop_service(TSqlParser.Drop_serviceContext) TSqlParserBaseListener.EnterDrop_signature(TSqlParser.Drop_signatureContext) TSqlParserBaseListener.ExitDrop_signature(TSqlParser.Drop_signatureContext) TSqlParserBaseListener.EnterDrop_statistics_name_azure_dw_and_pdw(TSqlParser.Drop_statistics_name_azure_dw_and_pdwContext) TSqlParserBaseListener.ExitDrop_statistics_name_azure_dw_and_pdw(TSqlParser.Drop_statistics_name_azure_dw_and_pdwContext) TSqlParserBaseListener.EnterDrop_symmetric_key(TSqlParser.Drop_symmetric_keyContext) TSqlParserBaseListener.ExitDrop_symmetric_key(TSqlParser.Drop_symmetric_keyContext) TSqlParserBaseListener.EnterDrop_synonym(TSqlParser.Drop_synonymContext) TSqlParserBaseListener.ExitDrop_synonym(TSqlParser.Drop_synonymContext) TSqlParserBaseListener.EnterDrop_user(TSqlParser.Drop_userContext) TSqlParserBaseListener.ExitDrop_user(TSqlParser.Drop_userContext) TSqlParserBaseListener.EnterDrop_workload_group(TSqlParser.Drop_workload_groupContext) TSqlParserBaseListener.ExitDrop_workload_group(TSqlParser.Drop_workload_groupContext) TSqlParserBaseListener.EnterDrop_xml_schema_collection(TSqlParser.Drop_xml_schema_collectionContext) TSqlParserBaseListener.ExitDrop_xml_schema_collection(TSqlParser.Drop_xml_schema_collectionContext) TSqlParserBaseListener.EnterDisable_trigger(TSqlParser.Disable_triggerContext) TSqlParserBaseListener.ExitDisable_trigger(TSqlParser.Disable_triggerContext) TSqlParserBaseListener.EnterEnable_trigger(TSqlParser.Enable_triggerContext) TSqlParserBaseListener.ExitEnable_trigger(TSqlParser.Enable_triggerContext) TSqlParserBaseListener.EnterLock_table(TSqlParser.Lock_tableContext) TSqlParserBaseListener.ExitLock_table(TSqlParser.Lock_tableContext) TSqlParserBaseListener.EnterTruncate_table(TSqlParser.Truncate_tableContext) TSqlParserBaseListener.ExitTruncate_table(TSqlParser.Truncate_tableContext) TSqlParserBaseListener.EnterCreate_column_master_key(TSqlParser.Create_column_master_keyContext) TSqlParserBaseListener.ExitCreate_column_master_key(TSqlParser.Create_column_master_keyContext) TSqlParserBaseListener.EnterAlter_credential(TSqlParser.Alter_credentialContext) TSqlParserBaseListener.ExitAlter_credential(TSqlParser.Alter_credentialContext) TSqlParserBaseListener.EnterCreate_credential(TSqlParser.Create_credentialContext) TSqlParserBaseListener.ExitCreate_credential(TSqlParser.Create_credentialContext) TSqlParserBaseListener.EnterAlter_cryptographic_provider(TSqlParser.Alter_cryptographic_providerContext) TSqlParserBaseListener.ExitAlter_cryptographic_provider(TSqlParser.Alter_cryptographic_providerContext) TSqlParserBaseListener.EnterCreate_cryptographic_provider(TSqlParser.Create_cryptographic_providerContext) TSqlParserBaseListener.ExitCreate_cryptographic_provider(TSqlParser.Create_cryptographic_providerContext) TSqlParserBaseListener.EnterCreate_event_notification(TSqlParser.Create_event_notificationContext) TSqlParserBaseListener.ExitCreate_event_notification(TSqlParser.Create_event_notificationContext) TSqlParserBaseListener.EnterCreate_or_alter_event_session(TSqlParser.Create_or_alter_event_sessionContext) TSqlParserBaseListener.ExitCreate_or_alter_event_session(TSqlParser.Create_or_alter_event_sessionContext) TSqlParserBaseListener.EnterEvent_session_predicate_expression(TSqlParser.Event_session_predicate_expressionContext) TSqlParserBaseListener.ExitEvent_session_predicate_expression(TSqlParser.Event_session_predicate_expressionContext) TSqlParserBaseListener.EnterEvent_session_predicate_factor(TSqlParser.Event_session_predicate_factorContext) TSqlParserBaseListener.ExitEvent_session_predicate_factor(TSqlParser.Event_session_predicate_factorContext) TSqlParserBaseListener.EnterEvent_session_predicate_leaf(TSqlParser.Event_session_predicate_leafContext) TSqlParserBaseListener.ExitEvent_session_predicate_leaf(TSqlParser.Event_session_predicate_leafContext) TSqlParserBaseListener.EnterAlter_external_data_source(TSqlParser.Alter_external_data_sourceContext) TSqlParserBaseListener.ExitAlter_external_data_source(TSqlParser.Alter_external_data_sourceContext) TSqlParserBaseListener.EnterAlter_external_library(TSqlParser.Alter_external_libraryContext) TSqlParserBaseListener.ExitAlter_external_library(TSqlParser.Alter_external_libraryContext) TSqlParserBaseListener.EnterCreate_external_library(TSqlParser.Create_external_libraryContext) TSqlParserBaseListener.ExitCreate_external_library(TSqlParser.Create_external_libraryContext) TSqlParserBaseListener.EnterAlter_external_resource_pool(TSqlParser.Alter_external_resource_poolContext) TSqlParserBaseListener.ExitAlter_external_resource_pool(TSqlParser.Alter_external_resource_poolContext) TSqlParserBaseListener.EnterCreate_external_resource_pool(TSqlParser.Create_external_resource_poolContext) TSqlParserBaseListener.ExitCreate_external_resource_pool(TSqlParser.Create_external_resource_poolContext) TSqlParserBaseListener.EnterAlter_fulltext_catalog(TSqlParser.Alter_fulltext_catalogContext) TSqlParserBaseListener.ExitAlter_fulltext_catalog(TSqlParser.Alter_fulltext_catalogContext) TSqlParserBaseListener.EnterCreate_fulltext_catalog(TSqlParser.Create_fulltext_catalogContext) TSqlParserBaseListener.ExitCreate_fulltext_catalog(TSqlParser.Create_fulltext_catalogContext) TSqlParserBaseListener.EnterAlter_fulltext_stoplist(TSqlParser.Alter_fulltext_stoplistContext) TSqlParserBaseListener.ExitAlter_fulltext_stoplist(TSqlParser.Alter_fulltext_stoplistContext) TSqlParserBaseListener.EnterCreate_fulltext_stoplist(TSqlParser.Create_fulltext_stoplistContext) TSqlParserBaseListener.ExitCreate_fulltext_stoplist(TSqlParser.Create_fulltext_stoplistContext) TSqlParserBaseListener.EnterAlter_login_sql_server(TSqlParser.Alter_login_sql_serverContext) TSqlParserBaseListener.ExitAlter_login_sql_server(TSqlParser.Alter_login_sql_serverContext) TSqlParserBaseListener.EnterCreate_login_sql_server(TSqlParser.Create_login_sql_serverContext) TSqlParserBaseListener.ExitCreate_login_sql_server(TSqlParser.Create_login_sql_serverContext) TSqlParserBaseListener.EnterAlter_login_azure_sql(TSqlParser.Alter_login_azure_sqlContext) TSqlParserBaseListener.ExitAlter_login_azure_sql(TSqlParser.Alter_login_azure_sqlContext) TSqlParserBaseListener.EnterCreate_login_azure_sql(TSqlParser.Create_login_azure_sqlContext) TSqlParserBaseListener.ExitCreate_login_azure_sql(TSqlParser.Create_login_azure_sqlContext) TSqlParserBaseListener.EnterAlter_login_azure_sql_dw_and_pdw(TSqlParser.Alter_login_azure_sql_dw_and_pdwContext) TSqlParserBaseListener.ExitAlter_login_azure_sql_dw_and_pdw(TSqlParser.Alter_login_azure_sql_dw_and_pdwContext) TSqlParserBaseListener.EnterCreate_login_pdw(TSqlParser.Create_login_pdwContext) TSqlParserBaseListener.ExitCreate_login_pdw(TSqlParser.Create_login_pdwContext) TSqlParserBaseListener.EnterAlter_master_key_sql_server(TSqlParser.Alter_master_key_sql_serverContext) TSqlParserBaseListener.ExitAlter_master_key_sql_server(TSqlParser.Alter_master_key_sql_serverContext) TSqlParserBaseListener.EnterCreate_master_key_sql_server(TSqlParser.Create_master_key_sql_serverContext) TSqlParserBaseListener.ExitCreate_master_key_sql_server(TSqlParser.Create_master_key_sql_serverContext) TSqlParserBaseListener.EnterAlter_master_key_azure_sql(TSqlParser.Alter_master_key_azure_sqlContext) TSqlParserBaseListener.ExitAlter_master_key_azure_sql(TSqlParser.Alter_master_key_azure_sqlContext) TSqlParserBaseListener.EnterCreate_master_key_azure_sql(TSqlParser.Create_master_key_azure_sqlContext) TSqlParserBaseListener.ExitCreate_master_key_azure_sql(TSqlParser.Create_master_key_azure_sqlContext) TSqlParserBaseListener.EnterAlter_message_type(TSqlParser.Alter_message_typeContext) TSqlParserBaseListener.ExitAlter_message_type(TSqlParser.Alter_message_typeContext) TSqlParserBaseListener.EnterAlter_partition_function(TSqlParser.Alter_partition_functionContext) TSqlParserBaseListener.ExitAlter_partition_function(TSqlParser.Alter_partition_functionContext) TSqlParserBaseListener.EnterAlter_partition_scheme(TSqlParser.Alter_partition_schemeContext) TSqlParserBaseListener.ExitAlter_partition_scheme(TSqlParser.Alter_partition_schemeContext) TSqlParserBaseListener.EnterAlter_remote_service_binding(TSqlParser.Alter_remote_service_bindingContext) TSqlParserBaseListener.ExitAlter_remote_service_binding(TSqlParser.Alter_remote_service_bindingContext) TSqlParserBaseListener.EnterCreate_remote_service_binding(TSqlParser.Create_remote_service_bindingContext) TSqlParserBaseListener.ExitCreate_remote_service_binding(TSqlParser.Create_remote_service_bindingContext) TSqlParserBaseListener.EnterCreate_resource_pool(TSqlParser.Create_resource_poolContext) TSqlParserBaseListener.ExitCreate_resource_pool(TSqlParser.Create_resource_poolContext) TSqlParserBaseListener.EnterAlter_resource_governor(TSqlParser.Alter_resource_governorContext) TSqlParserBaseListener.ExitAlter_resource_governor(TSqlParser.Alter_resource_governorContext) TSqlParserBaseListener.EnterAlter_db_role(TSqlParser.Alter_db_roleContext) TSqlParserBaseListener.ExitAlter_db_role(TSqlParser.Alter_db_roleContext) TSqlParserBaseListener.EnterCreate_db_role(TSqlParser.Create_db_roleContext) TSqlParserBaseListener.ExitCreate_db_role(TSqlParser.Create_db_roleContext) TSqlParserBaseListener.EnterCreate_route(TSqlParser.Create_routeContext) TSqlParserBaseListener.ExitCreate_route(TSqlParser.Create_routeContext) TSqlParserBaseListener.EnterCreate_rule(TSqlParser.Create_ruleContext) TSqlParserBaseListener.ExitCreate_rule(TSqlParser.Create_ruleContext) TSqlParserBaseListener.EnterAlter_schema_sql(TSqlParser.Alter_schema_sqlContext) TSqlParserBaseListener.ExitAlter_schema_sql(TSqlParser.Alter_schema_sqlContext) TSqlParserBaseListener.EnterCreate_schema(TSqlParser.Create_schemaContext) TSqlParserBaseListener.ExitCreate_schema(TSqlParser.Create_schemaContext) TSqlParserBaseListener.EnterCreate_schema_azure_sql_dw_and_pdw(TSqlParser.Create_schema_azure_sql_dw_and_pdwContext) TSqlParserBaseListener.ExitCreate_schema_azure_sql_dw_and_pdw(TSqlParser.Create_schema_azure_sql_dw_and_pdwContext) TSqlParserBaseListener.EnterAlter_schema_azure_sql_dw_and_pdw(TSqlParser.Alter_schema_azure_sql_dw_and_pdwContext) TSqlParserBaseListener.ExitAlter_schema_azure_sql_dw_and_pdw(TSqlParser.Alter_schema_azure_sql_dw_and_pdwContext) TSqlParserBaseListener.EnterCreate_search_property_list(TSqlParser.Create_search_property_listContext) TSqlParserBaseListener.ExitCreate_search_property_list(TSqlParser.Create_search_property_listContext) TSqlParserBaseListener.EnterCreate_security_policy(TSqlParser.Create_security_policyContext) TSqlParserBaseListener.ExitCreate_security_policy(TSqlParser.Create_security_policyContext) TSqlParserBaseListener.EnterAlter_sequence(TSqlParser.Alter_sequenceContext) TSqlParserBaseListener.ExitAlter_sequence(TSqlParser.Alter_sequenceContext) TSqlParserBaseListener.EnterCreate_sequence(TSqlParser.Create_sequenceContext) TSqlParserBaseListener.ExitCreate_sequence(TSqlParser.Create_sequenceContext) TSqlParserBaseListener.EnterAlter_server_audit(TSqlParser.Alter_server_auditContext) TSqlParserBaseListener.ExitAlter_server_audit(TSqlParser.Alter_server_auditContext) TSqlParserBaseListener.EnterCreate_server_audit(TSqlParser.Create_server_auditContext) TSqlParserBaseListener.ExitCreate_server_audit(TSqlParser.Create_server_auditContext) TSqlParserBaseListener.EnterAlter_server_audit_specification(TSqlParser.Alter_server_audit_specificationContext) TSqlParserBaseListener.ExitAlter_server_audit_specification(TSqlParser.Alter_server_audit_specificationContext) TSqlParserBaseListener.EnterCreate_server_audit_specification(TSqlParser.Create_server_audit_specificationContext) TSqlParserBaseListener.ExitCreate_server_audit_specification(TSqlParser.Create_server_audit_specificationContext) TSqlParserBaseListener.EnterAlter_server_configuration(TSqlParser.Alter_server_configurationContext) TSqlParserBaseListener.ExitAlter_server_configuration(TSqlParser.Alter_server_configurationContext) TSqlParserBaseListener.EnterAlter_server_role(TSqlParser.Alter_server_roleContext) TSqlParserBaseListener.ExitAlter_server_role(TSqlParser.Alter_server_roleContext) TSqlParserBaseListener.EnterCreate_server_role(TSqlParser.Create_server_roleContext) TSqlParserBaseListener.ExitCreate_server_role(TSqlParser.Create_server_roleContext) TSqlParserBaseListener.EnterAlter_server_role_pdw(TSqlParser.Alter_server_role_pdwContext) TSqlParserBaseListener.ExitAlter_server_role_pdw(TSqlParser.Alter_server_role_pdwContext) TSqlParserBaseListener.EnterAlter_service(TSqlParser.Alter_serviceContext) TSqlParserBaseListener.ExitAlter_service(TSqlParser.Alter_serviceContext) TSqlParserBaseListener.EnterCreate_service(TSqlParser.Create_serviceContext) TSqlParserBaseListener.ExitCreate_service(TSqlParser.Create_serviceContext) TSqlParserBaseListener.EnterAlter_service_master_key(TSqlParser.Alter_service_master_keyContext) TSqlParserBaseListener.ExitAlter_service_master_key(TSqlParser.Alter_service_master_keyContext) TSqlParserBaseListener.EnterAlter_symmetric_key(TSqlParser.Alter_symmetric_keyContext) TSqlParserBaseListener.ExitAlter_symmetric_key(TSqlParser.Alter_symmetric_keyContext) TSqlParserBaseListener.EnterCreate_synonym(TSqlParser.Create_synonymContext) TSqlParserBaseListener.ExitCreate_synonym(TSqlParser.Create_synonymContext) TSqlParserBaseListener.EnterAlter_user(TSqlParser.Alter_userContext) TSqlParserBaseListener.ExitAlter_user(TSqlParser.Alter_userContext) TSqlParserBaseListener.EnterCreate_user(TSqlParser.Create_userContext) TSqlParserBaseListener.ExitCreate_user(TSqlParser.Create_userContext) TSqlParserBaseListener.EnterCreate_user_azure_sql_dw(TSqlParser.Create_user_azure_sql_dwContext) TSqlParserBaseListener.ExitCreate_user_azure_sql_dw(TSqlParser.Create_user_azure_sql_dwContext) TSqlParserBaseListener.EnterAlter_user_azure_sql(TSqlParser.Alter_user_azure_sqlContext) TSqlParserBaseListener.ExitAlter_user_azure_sql(TSqlParser.Alter_user_azure_sqlContext) TSqlParserBaseListener.EnterAlter_workload_group(TSqlParser.Alter_workload_groupContext) TSqlParserBaseListener.ExitAlter_workload_group(TSqlParser.Alter_workload_groupContext) TSqlParserBaseListener.EnterCreate_workload_group(TSqlParser.Create_workload_groupContext) TSqlParserBaseListener.ExitCreate_workload_group(TSqlParser.Create_workload_groupContext) TSqlParserBaseListener.EnterCreate_xml_schema_collection(TSqlParser.Create_xml_schema_collectionContext) TSqlParserBaseListener.ExitCreate_xml_schema_collection(TSqlParser.Create_xml_schema_collectionContext) TSqlParserBaseListener.EnterCreate_partition_function(TSqlParser.Create_partition_functionContext) TSqlParserBaseListener.ExitCreate_partition_function(TSqlParser.Create_partition_functionContext) TSqlParserBaseListener.EnterCreate_partition_scheme(TSqlParser.Create_partition_schemeContext) TSqlParserBaseListener.ExitCreate_partition_scheme(TSqlParser.Create_partition_schemeContext) TSqlParserBaseListener.EnterCreate_queue(TSqlParser.Create_queueContext) TSqlParserBaseListener.ExitCreate_queue(TSqlParser.Create_queueContext) TSqlParserBaseListener.EnterQueue_settings(TSqlParser.Queue_settingsContext) TSqlParserBaseListener.ExitQueue_settings(TSqlParser.Queue_settingsContext) TSqlParserBaseListener.EnterAlter_queue(TSqlParser.Alter_queueContext) TSqlParserBaseListener.ExitAlter_queue(TSqlParser.Alter_queueContext) TSqlParserBaseListener.EnterQueue_action(TSqlParser.Queue_actionContext) TSqlParserBaseListener.ExitQueue_action(TSqlParser.Queue_actionContext) TSqlParserBaseListener.EnterQueue_rebuild_options(TSqlParser.Queue_rebuild_optionsContext) TSqlParserBaseListener.ExitQueue_rebuild_options(TSqlParser.Queue_rebuild_optionsContext) TSqlParserBaseListener.EnterCreate_contract(TSqlParser.Create_contractContext) TSqlParserBaseListener.ExitCreate_contract(TSqlParser.Create_contractContext) TSqlParserBaseListener.EnterConversation_statement(TSqlParser.Conversation_statementContext) TSqlParserBaseListener.ExitConversation_statement(TSqlParser.Conversation_statementContext) TSqlParserBaseListener.EnterMessage_statement(TSqlParser.Message_statementContext) TSqlParserBaseListener.ExitMessage_statement(TSqlParser.Message_statementContext) TSqlParserBaseListener.EnterMerge_statement(TSqlParser.Merge_statementContext) TSqlParserBaseListener.ExitMerge_statement(TSqlParser.Merge_statementContext) TSqlParserBaseListener.EnterWhen_matches(TSqlParser.When_matchesContext) TSqlParserBaseListener.ExitWhen_matches(TSqlParser.When_matchesContext) TSqlParserBaseListener.EnterMerge_matched(TSqlParser.Merge_matchedContext) TSqlParserBaseListener.ExitMerge_matched(TSqlParser.Merge_matchedContext) TSqlParserBaseListener.EnterMerge_not_matched(TSqlParser.Merge_not_matchedContext) TSqlParserBaseListener.ExitMerge_not_matched(TSqlParser.Merge_not_matchedContext) TSqlParserBaseListener.EnterDelete_statement(TSqlParser.Delete_statementContext) TSqlParserBaseListener.ExitDelete_statement(TSqlParser.Delete_statementContext) TSqlParserBaseListener.EnterDelete_statement_from(TSqlParser.Delete_statement_fromContext) TSqlParserBaseListener.ExitDelete_statement_from(TSqlParser.Delete_statement_fromContext) TSqlParserBaseListener.EnterInsert_statement(TSqlParser.Insert_statementContext) TSqlParserBaseListener.ExitInsert_statement(TSqlParser.Insert_statementContext) TSqlParserBaseListener.EnterInsert_statement_value(TSqlParser.Insert_statement_valueContext) TSqlParserBaseListener.ExitInsert_statement_value(TSqlParser.Insert_statement_valueContext) TSqlParserBaseListener.EnterReceive_statement(TSqlParser.Receive_statementContext) TSqlParserBaseListener.ExitReceive_statement(TSqlParser.Receive_statementContext) TSqlParserBaseListener.EnterSelect_statement_standalone(TSqlParser.Select_statement_standaloneContext) TSqlParserBaseListener.ExitSelect_statement_standalone(TSqlParser.Select_statement_standaloneContext) TSqlParserBaseListener.EnterSelect_statement(TSqlParser.Select_statementContext) TSqlParserBaseListener.ExitSelect_statement(TSqlParser.Select_statementContext) TSqlParserBaseListener.EnterTime(TSqlParser.TimeContext) TSqlParserBaseListener.ExitTime(TSqlParser.TimeContext) TSqlParserBaseListener.EnterUpdate_statement(TSqlParser.Update_statementContext) TSqlParserBaseListener.ExitUpdate_statement(TSqlParser.Update_statementContext) TSqlParserBaseListener.EnterOutput_clause(TSqlParser.Output_clauseContext) TSqlParserBaseListener.ExitOutput_clause(TSqlParser.Output_clauseContext) TSqlParserBaseListener.EnterOutput_dml_list_elem(TSqlParser.Output_dml_list_elemContext) TSqlParserBaseListener.ExitOutput_dml_list_elem(TSqlParser.Output_dml_list_elemContext) TSqlParserBaseListener.EnterCreate_database(TSqlParser.Create_databaseContext) TSqlParserBaseListener.ExitCreate_database(TSqlParser.Create_databaseContext) TSqlParserBaseListener.EnterCreate_index(TSqlParser.Create_indexContext) TSqlParserBaseListener.ExitCreate_index(TSqlParser.Create_indexContext) TSqlParserBaseListener.EnterAlter_index(TSqlParser.Alter_indexContext) TSqlParserBaseListener.ExitAlter_index(TSqlParser.Alter_indexContext) TSqlParserBaseListener.EnterRebuild_partition(TSqlParser.Rebuild_partitionContext) TSqlParserBaseListener.ExitRebuild_partition(TSqlParser.Rebuild_partitionContext) TSqlParserBaseListener.EnterCreate_columnstore_index(TSqlParser.Create_columnstore_indexContext) TSqlParserBaseListener.ExitCreate_columnstore_index(TSqlParser.Create_columnstore_indexContext) TSqlParserBaseListener.EnterCreate_nonclustered_columnstore_index(TSqlParser.Create_nonclustered_columnstore_indexContext) TSqlParserBaseListener.ExitCreate_nonclustered_columnstore_index(TSqlParser.Create_nonclustered_columnstore_indexContext) TSqlParserBaseListener.EnterCreate_xml_index(TSqlParser.Create_xml_indexContext) TSqlParserBaseListener.ExitCreate_xml_index(TSqlParser.Create_xml_indexContext) TSqlParserBaseListener.EnterCreate_or_alter_procedure(TSqlParser.Create_or_alter_procedureContext) TSqlParserBaseListener.ExitCreate_or_alter_procedure(TSqlParser.Create_or_alter_procedureContext) TSqlParserBaseListener.EnterAs_external_name(TSqlParser.As_external_nameContext) TSqlParserBaseListener.ExitAs_external_name(TSqlParser.As_external_nameContext) TSqlParserBaseListener.EnterCreate_or_alter_trigger(TSqlParser.Create_or_alter_triggerContext) TSqlParserBaseListener.ExitCreate_or_alter_trigger(TSqlParser.Create_or_alter_triggerContext) TSqlParserBaseListener.EnterCreate_or_alter_dml_trigger(TSqlParser.Create_or_alter_dml_triggerContext) TSqlParserBaseListener.ExitCreate_or_alter_dml_trigger(TSqlParser.Create_or_alter_dml_triggerContext) TSqlParserBaseListener.EnterDml_trigger_option(TSqlParser.Dml_trigger_optionContext) TSqlParserBaseListener.ExitDml_trigger_option(TSqlParser.Dml_trigger_optionContext) TSqlParserBaseListener.EnterDml_trigger_operation(TSqlParser.Dml_trigger_operationContext) TSqlParserBaseListener.ExitDml_trigger_operation(TSqlParser.Dml_trigger_operationContext) TSqlParserBaseListener.EnterCreate_or_alter_ddl_trigger(TSqlParser.Create_or_alter_ddl_triggerContext) TSqlParserBaseListener.ExitCreate_or_alter_ddl_trigger(TSqlParser.Create_or_alter_ddl_triggerContext) TSqlParserBaseListener.EnterDdl_trigger_operation(TSqlParser.Ddl_trigger_operationContext) TSqlParserBaseListener.ExitDdl_trigger_operation(TSqlParser.Ddl_trigger_operationContext) TSqlParserBaseListener.EnterCreate_or_alter_function(TSqlParser.Create_or_alter_functionContext) TSqlParserBaseListener.ExitCreate_or_alter_function(TSqlParser.Create_or_alter_functionContext) TSqlParserBaseListener.EnterFunc_body_returns_select(TSqlParser.Func_body_returns_selectContext) TSqlParserBaseListener.ExitFunc_body_returns_select(TSqlParser.Func_body_returns_selectContext) TSqlParserBaseListener.EnterFunc_body_returns_table(TSqlParser.Func_body_returns_tableContext) TSqlParserBaseListener.ExitFunc_body_returns_table(TSqlParser.Func_body_returns_tableContext) TSqlParserBaseListener.EnterFunc_body_returns_scalar(TSqlParser.Func_body_returns_scalarContext) TSqlParserBaseListener.ExitFunc_body_returns_scalar(TSqlParser.Func_body_returns_scalarContext) TSqlParserBaseListener.EnterProcedure_param(TSqlParser.Procedure_paramContext) TSqlParserBaseListener.ExitProcedure_param(TSqlParser.Procedure_paramContext) TSqlParserBaseListener.EnterProcedure_option(TSqlParser.Procedure_optionContext) TSqlParserBaseListener.ExitProcedure_option(TSqlParser.Procedure_optionContext) TSqlParserBaseListener.EnterFunction_option(TSqlParser.Function_optionContext) TSqlParserBaseListener.ExitFunction_option(TSqlParser.Function_optionContext) TSqlParserBaseListener.EnterCreate_statistics(TSqlParser.Create_statisticsContext) TSqlParserBaseListener.ExitCreate_statistics(TSqlParser.Create_statisticsContext) TSqlParserBaseListener.EnterUpdate_statistics(TSqlParser.Update_statisticsContext) TSqlParserBaseListener.ExitUpdate_statistics(TSqlParser.Update_statisticsContext) TSqlParserBaseListener.EnterCreate_table(TSqlParser.Create_tableContext) TSqlParserBaseListener.ExitCreate_table(TSqlParser.Create_tableContext) TSqlParserBaseListener.EnterTable_indices(TSqlParser.Table_indicesContext) TSqlParserBaseListener.ExitTable_indices(TSqlParser.Table_indicesContext) TSqlParserBaseListener.EnterTable_options(TSqlParser.Table_optionsContext) TSqlParserBaseListener.ExitTable_options(TSqlParser.Table_optionsContext) TSqlParserBaseListener.EnterCreate_view(TSqlParser.Create_viewContext) TSqlParserBaseListener.ExitCreate_view(TSqlParser.Create_viewContext) TSqlParserBaseListener.EnterView_attribute(TSqlParser.View_attributeContext) TSqlParserBaseListener.ExitView_attribute(TSqlParser.View_attributeContext) TSqlParserBaseListener.EnterAlter_table(TSqlParser.Alter_tableContext) TSqlParserBaseListener.ExitAlter_table(TSqlParser.Alter_tableContext) TSqlParserBaseListener.EnterSwitch_partition(TSqlParser.Switch_partitionContext) TSqlParserBaseListener.ExitSwitch_partition(TSqlParser.Switch_partitionContext) TSqlParserBaseListener.EnterLow_priority_lock_wait(TSqlParser.Low_priority_lock_waitContext) TSqlParserBaseListener.ExitLow_priority_lock_wait(TSqlParser.Low_priority_lock_waitContext) TSqlParserBaseListener.EnterAlter_database(TSqlParser.Alter_databaseContext) TSqlParserBaseListener.ExitAlter_database(TSqlParser.Alter_databaseContext) TSqlParserBaseListener.EnterAdd_or_modify_files(TSqlParser.Add_or_modify_filesContext) TSqlParserBaseListener.ExitAdd_or_modify_files(TSqlParser.Add_or_modify_filesContext) TSqlParserBaseListener.EnterFilespec(TSqlParser.FilespecContext) TSqlParserBaseListener.ExitFilespec(TSqlParser.FilespecContext) TSqlParserBaseListener.EnterAdd_or_modify_filegroups(TSqlParser.Add_or_modify_filegroupsContext) TSqlParserBaseListener.ExitAdd_or_modify_filegroups(TSqlParser.Add_or_modify_filegroupsContext) TSqlParserBaseListener.EnterFilegroup_updatability_option(TSqlParser.Filegroup_updatability_optionContext) TSqlParserBaseListener.ExitFilegroup_updatability_option(TSqlParser.Filegroup_updatability_optionContext) TSqlParserBaseListener.EnterDatabase_optionspec(TSqlParser.Database_optionspecContext) TSqlParserBaseListener.ExitDatabase_optionspec(TSqlParser.Database_optionspecContext) TSqlParserBaseListener.EnterAuto_option(TSqlParser.Auto_optionContext) TSqlParserBaseListener.ExitAuto_option(TSqlParser.Auto_optionContext) TSqlParserBaseListener.EnterChange_tracking_option(TSqlParser.Change_tracking_optionContext) TSqlParserBaseListener.ExitChange_tracking_option(TSqlParser.Change_tracking_optionContext) TSqlParserBaseListener.EnterChange_tracking_option_list(TSqlParser.Change_tracking_option_listContext) TSqlParserBaseListener.ExitChange_tracking_option_list(TSqlParser.Change_tracking_option_listContext) TSqlParserBaseListener.EnterContainment_option(TSqlParser.Containment_optionContext) TSqlParserBaseListener.ExitContainment_option(TSqlParser.Containment_optionContext) TSqlParserBaseListener.EnterCursor_option(TSqlParser.Cursor_optionContext) TSqlParserBaseListener.ExitCursor_option(TSqlParser.Cursor_optionContext) TSqlParserBaseListener.EnterAlter_endpoint(TSqlParser.Alter_endpointContext) TSqlParserBaseListener.ExitAlter_endpoint(TSqlParser.Alter_endpointContext) TSqlParserBaseListener.EnterDatabase_mirroring_option(TSqlParser.Database_mirroring_optionContext) TSqlParserBaseListener.ExitDatabase_mirroring_option(TSqlParser.Database_mirroring_optionContext) TSqlParserBaseListener.EnterMirroring_set_option(TSqlParser.Mirroring_set_optionContext) TSqlParserBaseListener.ExitMirroring_set_option(TSqlParser.Mirroring_set_optionContext) TSqlParserBaseListener.EnterMirroring_partner(TSqlParser.Mirroring_partnerContext) TSqlParserBaseListener.ExitMirroring_partner(TSqlParser.Mirroring_partnerContext) TSqlParserBaseListener.EnterMirroring_witness(TSqlParser.Mirroring_witnessContext) TSqlParserBaseListener.ExitMirroring_witness(TSqlParser.Mirroring_witnessContext) TSqlParserBaseListener.EnterWitness_partner_equal(TSqlParser.Witness_partner_equalContext) TSqlParserBaseListener.ExitWitness_partner_equal(TSqlParser.Witness_partner_equalContext) TSqlParserBaseListener.EnterPartner_option(TSqlParser.Partner_optionContext) TSqlParserBaseListener.ExitPartner_option(TSqlParser.Partner_optionContext) TSqlParserBaseListener.EnterWitness_option(TSqlParser.Witness_optionContext) TSqlParserBaseListener.ExitWitness_option(TSqlParser.Witness_optionContext) TSqlParserBaseListener.EnterWitness_server(TSqlParser.Witness_serverContext) TSqlParserBaseListener.ExitWitness_server(TSqlParser.Witness_serverContext) TSqlParserBaseListener.EnterPartner_server(TSqlParser.Partner_serverContext) TSqlParserBaseListener.ExitPartner_server(TSqlParser.Partner_serverContext) TSqlParserBaseListener.EnterMirroring_host_port_seperator(TSqlParser.Mirroring_host_port_seperatorContext) TSqlParserBaseListener.ExitMirroring_host_port_seperator(TSqlParser.Mirroring_host_port_seperatorContext) TSqlParserBaseListener.EnterPartner_server_tcp_prefix(TSqlParser.Partner_server_tcp_prefixContext) TSqlParserBaseListener.ExitPartner_server_tcp_prefix(TSqlParser.Partner_server_tcp_prefixContext) TSqlParserBaseListener.EnterPort_number(TSqlParser.Port_numberContext) TSqlParserBaseListener.ExitPort_number(TSqlParser.Port_numberContext) TSqlParserBaseListener.EnterHost(TSqlParser.HostContext) TSqlParserBaseListener.ExitHost(TSqlParser.HostContext) TSqlParserBaseListener.EnterDate_correlation_optimization_option(TSqlParser.Date_correlation_optimization_optionContext) TSqlParserBaseListener.ExitDate_correlation_optimization_option(TSqlParser.Date_correlation_optimization_optionContext) TSqlParserBaseListener.EnterDb_encryption_option(TSqlParser.Db_encryption_optionContext) TSqlParserBaseListener.ExitDb_encryption_option(TSqlParser.Db_encryption_optionContext) TSqlParserBaseListener.EnterDb_state_option(TSqlParser.Db_state_optionContext) TSqlParserBaseListener.ExitDb_state_option(TSqlParser.Db_state_optionContext) TSqlParserBaseListener.EnterDb_update_option(TSqlParser.Db_update_optionContext) TSqlParserBaseListener.ExitDb_update_option(TSqlParser.Db_update_optionContext) TSqlParserBaseListener.EnterDb_user_access_option(TSqlParser.Db_user_access_optionContext) TSqlParserBaseListener.ExitDb_user_access_option(TSqlParser.Db_user_access_optionContext) TSqlParserBaseListener.EnterDelayed_durability_option(TSqlParser.Delayed_durability_optionContext) TSqlParserBaseListener.ExitDelayed_durability_option(TSqlParser.Delayed_durability_optionContext) TSqlParserBaseListener.EnterExternal_access_option(TSqlParser.External_access_optionContext) TSqlParserBaseListener.ExitExternal_access_option(TSqlParser.External_access_optionContext) TSqlParserBaseListener.EnterHadr_options(TSqlParser.Hadr_optionsContext) TSqlParserBaseListener.ExitHadr_options(TSqlParser.Hadr_optionsContext) TSqlParserBaseListener.EnterMixed_page_allocation_option(TSqlParser.Mixed_page_allocation_optionContext) TSqlParserBaseListener.ExitMixed_page_allocation_option(TSqlParser.Mixed_page_allocation_optionContext) TSqlParserBaseListener.EnterParameterization_option(TSqlParser.Parameterization_optionContext) TSqlParserBaseListener.ExitParameterization_option(TSqlParser.Parameterization_optionContext) TSqlParserBaseListener.EnterRecovery_option(TSqlParser.Recovery_optionContext) TSqlParserBaseListener.ExitRecovery_option(TSqlParser.Recovery_optionContext) TSqlParserBaseListener.EnterService_broker_option(TSqlParser.Service_broker_optionContext) TSqlParserBaseListener.ExitService_broker_option(TSqlParser.Service_broker_optionContext) TSqlParserBaseListener.EnterSnapshot_option(TSqlParser.Snapshot_optionContext) TSqlParserBaseListener.ExitSnapshot_option(TSqlParser.Snapshot_optionContext) TSqlParserBaseListener.EnterSql_option(TSqlParser.Sql_optionContext) TSqlParserBaseListener.ExitSql_option(TSqlParser.Sql_optionContext) TSqlParserBaseListener.EnterTarget_recovery_time_option(TSqlParser.Target_recovery_time_optionContext) TSqlParserBaseListener.ExitTarget_recovery_time_option(TSqlParser.Target_recovery_time_optionContext) TSqlParserBaseListener.EnterTermination(TSqlParser.TerminationContext) TSqlParserBaseListener.ExitTermination(TSqlParser.TerminationContext) TSqlParserBaseListener.EnterDrop_index(TSqlParser.Drop_indexContext) TSqlParserBaseListener.ExitDrop_index(TSqlParser.Drop_indexContext) TSqlParserBaseListener.EnterDrop_relational_or_xml_or_spatial_index(TSqlParser.Drop_relational_or_xml_or_spatial_indexContext) TSqlParserBaseListener.ExitDrop_relational_or_xml_or_spatial_index(TSqlParser.Drop_relational_or_xml_or_spatial_indexContext) TSqlParserBaseListener.EnterDrop_backward_compatible_index(TSqlParser.Drop_backward_compatible_indexContext) TSqlParserBaseListener.ExitDrop_backward_compatible_index(TSqlParser.Drop_backward_compatible_indexContext) TSqlParserBaseListener.EnterDrop_procedure(TSqlParser.Drop_procedureContext) TSqlParserBaseListener.ExitDrop_procedure(TSqlParser.Drop_procedureContext) TSqlParserBaseListener.EnterDrop_trigger(TSqlParser.Drop_triggerContext) TSqlParserBaseListener.ExitDrop_trigger(TSqlParser.Drop_triggerContext) TSqlParserBaseListener.EnterDrop_dml_trigger(TSqlParser.Drop_dml_triggerContext) TSqlParserBaseListener.ExitDrop_dml_trigger(TSqlParser.Drop_dml_triggerContext) TSqlParserBaseListener.EnterDrop_ddl_trigger(TSqlParser.Drop_ddl_triggerContext) TSqlParserBaseListener.ExitDrop_ddl_trigger(TSqlParser.Drop_ddl_triggerContext) TSqlParserBaseListener.EnterDrop_function(TSqlParser.Drop_functionContext) TSqlParserBaseListener.ExitDrop_function(TSqlParser.Drop_functionContext) TSqlParserBaseListener.EnterDrop_statistics(TSqlParser.Drop_statisticsContext) TSqlParserBaseListener.ExitDrop_statistics(TSqlParser.Drop_statisticsContext) TSqlParserBaseListener.EnterDrop_table(TSqlParser.Drop_tableContext) TSqlParserBaseListener.ExitDrop_table(TSqlParser.Drop_tableContext) TSqlParserBaseListener.EnterDrop_view(TSqlParser.Drop_viewContext) TSqlParserBaseListener.ExitDrop_view(TSqlParser.Drop_viewContext) TSqlParserBaseListener.EnterCreate_type(TSqlParser.Create_typeContext) TSqlParserBaseListener.ExitCreate_type(TSqlParser.Create_typeContext) TSqlParserBaseListener.EnterDrop_type(TSqlParser.Drop_typeContext) TSqlParserBaseListener.ExitDrop_type(TSqlParser.Drop_typeContext) TSqlParserBaseListener.EnterRowset_function_limited(TSqlParser.Rowset_function_limitedContext) TSqlParserBaseListener.ExitRowset_function_limited(TSqlParser.Rowset_function_limitedContext) TSqlParserBaseListener.EnterOpenquery(TSqlParser.OpenqueryContext) TSqlParserBaseListener.ExitOpenquery(TSqlParser.OpenqueryContext) TSqlParserBaseListener.EnterOpendatasource(TSqlParser.OpendatasourceContext) TSqlParserBaseListener.ExitOpendatasource(TSqlParser.OpendatasourceContext) TSqlParserBaseListener.EnterDeclare_statement(TSqlParser.Declare_statementContext) TSqlParserBaseListener.ExitDeclare_statement(TSqlParser.Declare_statementContext) TSqlParserBaseListener.EnterXml_declaration(TSqlParser.Xml_declarationContext) TSqlParserBaseListener.ExitXml_declaration(TSqlParser.Xml_declarationContext) TSqlParserBaseListener.EnterCursor_statement(TSqlParser.Cursor_statementContext) TSqlParserBaseListener.ExitCursor_statement(TSqlParser.Cursor_statementContext) TSqlParserBaseListener.EnterBackup_database(TSqlParser.Backup_databaseContext) TSqlParserBaseListener.ExitBackup_database(TSqlParser.Backup_databaseContext) TSqlParserBaseListener.EnterBackup_log(TSqlParser.Backup_logContext) TSqlParserBaseListener.ExitBackup_log(TSqlParser.Backup_logContext) TSqlParserBaseListener.EnterBackup_certificate(TSqlParser.Backup_certificateContext) TSqlParserBaseListener.ExitBackup_certificate(TSqlParser.Backup_certificateContext) TSqlParserBaseListener.EnterBackup_master_key(TSqlParser.Backup_master_keyContext) TSqlParserBaseListener.ExitBackup_master_key(TSqlParser.Backup_master_keyContext) TSqlParserBaseListener.EnterBackup_service_master_key(TSqlParser.Backup_service_master_keyContext) TSqlParserBaseListener.ExitBackup_service_master_key(TSqlParser.Backup_service_master_keyContext) TSqlParserBaseListener.EnterKill_statement(TSqlParser.Kill_statementContext) TSqlParserBaseListener.ExitKill_statement(TSqlParser.Kill_statementContext) TSqlParserBaseListener.EnterKill_process(TSqlParser.Kill_processContext) TSqlParserBaseListener.ExitKill_process(TSqlParser.Kill_processContext) TSqlParserBaseListener.EnterKill_query_notification(TSqlParser.Kill_query_notificationContext) TSqlParserBaseListener.ExitKill_query_notification(TSqlParser.Kill_query_notificationContext) TSqlParserBaseListener.EnterKill_stats_job(TSqlParser.Kill_stats_jobContext) TSqlParserBaseListener.ExitKill_stats_job(TSqlParser.Kill_stats_jobContext) TSqlParserBaseListener.EnterExecute_statement(TSqlParser.Execute_statementContext) TSqlParserBaseListener.ExitExecute_statement(TSqlParser.Execute_statementContext) TSqlParserBaseListener.EnterExecute_body_batch(TSqlParser.Execute_body_batchContext) TSqlParserBaseListener.ExitExecute_body_batch(TSqlParser.Execute_body_batchContext) TSqlParserBaseListener.EnterExecute_body(TSqlParser.Execute_bodyContext) TSqlParserBaseListener.ExitExecute_body(TSqlParser.Execute_bodyContext) TSqlParserBaseListener.EnterExecute_statement_arg(TSqlParser.Execute_statement_argContext) TSqlParserBaseListener.ExitExecute_statement_arg(TSqlParser.Execute_statement_argContext) TSqlParserBaseListener.EnterExecute_statement_arg_named(TSqlParser.Execute_statement_arg_namedContext) TSqlParserBaseListener.ExitExecute_statement_arg_named(TSqlParser.Execute_statement_arg_namedContext) TSqlParserBaseListener.EnterExecute_statement_arg_unnamed(TSqlParser.Execute_statement_arg_unnamedContext) TSqlParserBaseListener.ExitExecute_statement_arg_unnamed(TSqlParser.Execute_statement_arg_unnamedContext) TSqlParserBaseListener.EnterExecute_parameter(TSqlParser.Execute_parameterContext) TSqlParserBaseListener.ExitExecute_parameter(TSqlParser.Execute_parameterContext) TSqlParserBaseListener.EnterExecute_var_string(TSqlParser.Execute_var_stringContext) TSqlParserBaseListener.ExitExecute_var_string(TSqlParser.Execute_var_stringContext) TSqlParserBaseListener.EnterSecurity_statement(TSqlParser.Security_statementContext) TSqlParserBaseListener.ExitSecurity_statement(TSqlParser.Security_statementContext) TSqlParserBaseListener.EnterPrincipal_id(TSqlParser.Principal_idContext) TSqlParserBaseListener.ExitPrincipal_id(TSqlParser.Principal_idContext) TSqlParserBaseListener.EnterCreate_certificate(TSqlParser.Create_certificateContext) TSqlParserBaseListener.ExitCreate_certificate(TSqlParser.Create_certificateContext) TSqlParserBaseListener.EnterExisting_keys(TSqlParser.Existing_keysContext) TSqlParserBaseListener.ExitExisting_keys(TSqlParser.Existing_keysContext) TSqlParserBaseListener.EnterPrivate_key_options(TSqlParser.Private_key_optionsContext) TSqlParserBaseListener.ExitPrivate_key_options(TSqlParser.Private_key_optionsContext) TSqlParserBaseListener.EnterGenerate_new_keys(TSqlParser.Generate_new_keysContext) TSqlParserBaseListener.ExitGenerate_new_keys(TSqlParser.Generate_new_keysContext) TSqlParserBaseListener.EnterDate_options(TSqlParser.Date_optionsContext) TSqlParserBaseListener.ExitDate_options(TSqlParser.Date_optionsContext) TSqlParserBaseListener.EnterOpen_key(TSqlParser.Open_keyContext) TSqlParserBaseListener.ExitOpen_key(TSqlParser.Open_keyContext) TSqlParserBaseListener.EnterClose_key(TSqlParser.Close_keyContext) TSqlParserBaseListener.ExitClose_key(TSqlParser.Close_keyContext) TSqlParserBaseListener.EnterCreate_key(TSqlParser.Create_keyContext) TSqlParserBaseListener.ExitCreate_key(TSqlParser.Create_keyContext) TSqlParserBaseListener.EnterKey_options(TSqlParser.Key_optionsContext) TSqlParserBaseListener.ExitKey_options(TSqlParser.Key_optionsContext) TSqlParserBaseListener.EnterAlgorithm(TSqlParser.AlgorithmContext) TSqlParserBaseListener.ExitAlgorithm(TSqlParser.AlgorithmContext) TSqlParserBaseListener.EnterEncryption_mechanism(TSqlParser.Encryption_mechanismContext) TSqlParserBaseListener.ExitEncryption_mechanism(TSqlParser.Encryption_mechanismContext) TSqlParserBaseListener.EnterDecryption_mechanism(TSqlParser.Decryption_mechanismContext) TSqlParserBaseListener.ExitDecryption_mechanism(TSqlParser.Decryption_mechanismContext) TSqlParserBaseListener.EnterGrant_permission(TSqlParser.Grant_permissionContext) TSqlParserBaseListener.ExitGrant_permission(TSqlParser.Grant_permissionContext) TSqlParserBaseListener.EnterSet_statement(TSqlParser.Set_statementContext) TSqlParserBaseListener.ExitSet_statement(TSqlParser.Set_statementContext) TSqlParserBaseListener.EnterTransaction_statement(TSqlParser.Transaction_statementContext) TSqlParserBaseListener.ExitTransaction_statement(TSqlParser.Transaction_statementContext) TSqlParserBaseListener.EnterGo_batch_statement(TSqlParser.Go_batch_statementContext) TSqlParserBaseListener.ExitGo_batch_statement(TSqlParser.Go_batch_statementContext) TSqlParserBaseListener.EnterGo_statement(TSqlParser.Go_statementContext) TSqlParserBaseListener.ExitGo_statement(TSqlParser.Go_statementContext) TSqlParserBaseListener.EnterUse_statement(TSqlParser.Use_statementContext) TSqlParserBaseListener.ExitUse_statement(TSqlParser.Use_statementContext) TSqlParserBaseListener.EnterSetuser_statement(TSqlParser.Setuser_statementContext) TSqlParserBaseListener.ExitSetuser_statement(TSqlParser.Setuser_statementContext) TSqlParserBaseListener.EnterReconfigure_statement(TSqlParser.Reconfigure_statementContext) TSqlParserBaseListener.ExitReconfigure_statement(TSqlParser.Reconfigure_statementContext) TSqlParserBaseListener.EnterShutdown_statement(TSqlParser.Shutdown_statementContext) TSqlParserBaseListener.ExitShutdown_statement(TSqlParser.Shutdown_statementContext) TSqlParserBaseListener.EnterCheckpoint_statement(TSqlParser.Checkpoint_statementContext) TSqlParserBaseListener.ExitCheckpoint_statement(TSqlParser.Checkpoint_statementContext) TSqlParserBaseListener.EnterDbcc_special(TSqlParser.Dbcc_specialContext) TSqlParserBaseListener.ExitDbcc_special(TSqlParser.Dbcc_specialContext) TSqlParserBaseListener.EnterDbcc_clause(TSqlParser.Dbcc_clauseContext) TSqlParserBaseListener.ExitDbcc_clause(TSqlParser.Dbcc_clauseContext) TSqlParserBaseListener.EnterDbcc_command(TSqlParser.Dbcc_commandContext) TSqlParserBaseListener.ExitDbcc_command(TSqlParser.Dbcc_commandContext) TSqlParserBaseListener.EnterDbcc_options(TSqlParser.Dbcc_optionsContext) TSqlParserBaseListener.ExitDbcc_options(TSqlParser.Dbcc_optionsContext) TSqlParserBaseListener.EnterExecute_clause(TSqlParser.Execute_clauseContext) TSqlParserBaseListener.ExitExecute_clause(TSqlParser.Execute_clauseContext) TSqlParserBaseListener.EnterDeclare_local(TSqlParser.Declare_localContext) TSqlParserBaseListener.ExitDeclare_local(TSqlParser.Declare_localContext) TSqlParserBaseListener.EnterTable_type_definition(TSqlParser.Table_type_definitionContext) TSqlParserBaseListener.ExitTable_type_definition(TSqlParser.Table_type_definitionContext) TSqlParserBaseListener.EnterTable_type_indices(TSqlParser.Table_type_indicesContext) TSqlParserBaseListener.ExitTable_type_indices(TSqlParser.Table_type_indicesContext) TSqlParserBaseListener.EnterXml_type_definition(TSqlParser.Xml_type_definitionContext) TSqlParserBaseListener.ExitXml_type_definition(TSqlParser.Xml_type_definitionContext) TSqlParserBaseListener.EnterXml_schema_collection(TSqlParser.Xml_schema_collectionContext) TSqlParserBaseListener.ExitXml_schema_collection(TSqlParser.Xml_schema_collectionContext) TSqlParserBaseListener.EnterColumn_def_table_constraints(TSqlParser.Column_def_table_constraintsContext) TSqlParserBaseListener.ExitColumn_def_table_constraints(TSqlParser.Column_def_table_constraintsContext) TSqlParserBaseListener.EnterColumn_def_table_constraint(TSqlParser.Column_def_table_constraintContext) TSqlParserBaseListener.ExitColumn_def_table_constraint(TSqlParser.Column_def_table_constraintContext) TSqlParserBaseListener.EnterColumn_definition(TSqlParser.Column_definitionContext) TSqlParserBaseListener.ExitColumn_definition(TSqlParser.Column_definitionContext) TSqlParserBaseListener.EnterMaterialized_column_definition(TSqlParser.Materialized_column_definitionContext) TSqlParserBaseListener.ExitMaterialized_column_definition(TSqlParser.Materialized_column_definitionContext) TSqlParserBaseListener.EnterColumn_constraint(TSqlParser.Column_constraintContext) TSqlParserBaseListener.ExitColumn_constraint(TSqlParser.Column_constraintContext) TSqlParserBaseListener.EnterTable_constraint(TSqlParser.Table_constraintContext) TSqlParserBaseListener.ExitTable_constraint(TSqlParser.Table_constraintContext) TSqlParserBaseListener.EnterOn_delete(TSqlParser.On_deleteContext) TSqlParserBaseListener.ExitOn_delete(TSqlParser.On_deleteContext) TSqlParserBaseListener.EnterOn_update(TSqlParser.On_updateContext) TSqlParserBaseListener.ExitOn_update(TSqlParser.On_updateContext) TSqlParserBaseListener.EnterIndex_options(TSqlParser.Index_optionsContext) TSqlParserBaseListener.ExitIndex_options(TSqlParser.Index_optionsContext) TSqlParserBaseListener.EnterIndex_option(TSqlParser.Index_optionContext) TSqlParserBaseListener.ExitIndex_option(TSqlParser.Index_optionContext) TSqlParserBaseListener.EnterDeclare_cursor(TSqlParser.Declare_cursorContext) TSqlParserBaseListener.ExitDeclare_cursor(TSqlParser.Declare_cursorContext) TSqlParserBaseListener.EnterDeclare_set_cursor_common(TSqlParser.Declare_set_cursor_commonContext) TSqlParserBaseListener.ExitDeclare_set_cursor_common(TSqlParser.Declare_set_cursor_commonContext) TSqlParserBaseListener.EnterDeclare_set_cursor_common_partial(TSqlParser.Declare_set_cursor_common_partialContext) TSqlParserBaseListener.ExitDeclare_set_cursor_common_partial(TSqlParser.Declare_set_cursor_common_partialContext) TSqlParserBaseListener.EnterFetch_cursor(TSqlParser.Fetch_cursorContext) TSqlParserBaseListener.ExitFetch_cursor(TSqlParser.Fetch_cursorContext) TSqlParserBaseListener.EnterSet_special(TSqlParser.Set_specialContext) TSqlParserBaseListener.ExitSet_special(TSqlParser.Set_specialContext) TSqlParserBaseListener.EnterSpecial_list(TSqlParser.Special_listContext) TSqlParserBaseListener.ExitSpecial_list(TSqlParser.Special_listContext) TSqlParserBaseListener.EnterConstant_LOCAL_ID(TSqlParser.Constant_LOCAL_IDContext) TSqlParserBaseListener.ExitConstant_LOCAL_ID(TSqlParser.Constant_LOCAL_IDContext) TSqlParserBaseListener.EnterExpression(TSqlParser.ExpressionContext) TSqlParserBaseListener.ExitExpression(TSqlParser.ExpressionContext) TSqlParserBaseListener.EnterTime_zone(TSqlParser.Time_zoneContext) TSqlParserBaseListener.ExitTime_zone(TSqlParser.Time_zoneContext) TSqlParserBaseListener.EnterPrimitive_expression(TSqlParser.Primitive_expressionContext) TSqlParserBaseListener.ExitPrimitive_expression(TSqlParser.Primitive_expressionContext) TSqlParserBaseListener.EnterCase_expression(TSqlParser.Case_expressionContext) TSqlParserBaseListener.ExitCase_expression(TSqlParser.Case_expressionContext) TSqlParserBaseListener.EnterUnary_operator_expression(TSqlParser.Unary_operator_expressionContext) TSqlParserBaseListener.ExitUnary_operator_expression(TSqlParser.Unary_operator_expressionContext) TSqlParserBaseListener.EnterBracket_expression(TSqlParser.Bracket_expressionContext) TSqlParserBaseListener.ExitBracket_expression(TSqlParser.Bracket_expressionContext) TSqlParserBaseListener.EnterConstant_expression(TSqlParser.Constant_expressionContext) TSqlParserBaseListener.ExitConstant_expression(TSqlParser.Constant_expressionContext) TSqlParserBaseListener.EnterSubquery(TSqlParser.SubqueryContext) TSqlParserBaseListener.ExitSubquery(TSqlParser.SubqueryContext) TSqlParserBaseListener.EnterWith_expression(TSqlParser.With_expressionContext) TSqlParserBaseListener.ExitWith_expression(TSqlParser.With_expressionContext) TSqlParserBaseListener.EnterCommon_table_expression(TSqlParser.Common_table_expressionContext) TSqlParserBaseListener.ExitCommon_table_expression(TSqlParser.Common_table_expressionContext) TSqlParserBaseListener.EnterUpdate_elem(TSqlParser.Update_elemContext) TSqlParserBaseListener.ExitUpdate_elem(TSqlParser.Update_elemContext) TSqlParserBaseListener.EnterUpdate_elem_merge(TSqlParser.Update_elem_mergeContext) TSqlParserBaseListener.ExitUpdate_elem_merge(TSqlParser.Update_elem_mergeContext) TSqlParserBaseListener.EnterSearch_condition(TSqlParser.Search_conditionContext) TSqlParserBaseListener.ExitSearch_condition(TSqlParser.Search_conditionContext) TSqlParserBaseListener.EnterPredicate(TSqlParser.PredicateContext) TSqlParserBaseListener.ExitPredicate(TSqlParser.PredicateContext) TSqlParserBaseListener.EnterQuery_expression(TSqlParser.Query_expressionContext) TSqlParserBaseListener.ExitQuery_expression(TSqlParser.Query_expressionContext) TSqlParserBaseListener.EnterSql_union(TSqlParser.Sql_unionContext) TSqlParserBaseListener.ExitSql_union(TSqlParser.Sql_unionContext) TSqlParserBaseListener.EnterQuery_specification(TSqlParser.Query_specificationContext) TSqlParserBaseListener.ExitQuery_specification(TSqlParser.Query_specificationContext) TSqlParserBaseListener.EnterTop_clause(TSqlParser.Top_clauseContext) TSqlParserBaseListener.ExitTop_clause(TSqlParser.Top_clauseContext) TSqlParserBaseListener.EnterTop_percent(TSqlParser.Top_percentContext) TSqlParserBaseListener.ExitTop_percent(TSqlParser.Top_percentContext) TSqlParserBaseListener.EnterTop_count(TSqlParser.Top_countContext) TSqlParserBaseListener.ExitTop_count(TSqlParser.Top_countContext) TSqlParserBaseListener.EnterOrder_by_clause(TSqlParser.Order_by_clauseContext) TSqlParserBaseListener.ExitOrder_by_clause(TSqlParser.Order_by_clauseContext) TSqlParserBaseListener.EnterFor_clause(TSqlParser.For_clauseContext) TSqlParserBaseListener.ExitFor_clause(TSqlParser.For_clauseContext) TSqlParserBaseListener.EnterXml_common_directives(TSqlParser.Xml_common_directivesContext) TSqlParserBaseListener.ExitXml_common_directives(TSqlParser.Xml_common_directivesContext) TSqlParserBaseListener.EnterOrder_by_expression(TSqlParser.Order_by_expressionContext) TSqlParserBaseListener.ExitOrder_by_expression(TSqlParser.Order_by_expressionContext) TSqlParserBaseListener.EnterGroup_by_item(TSqlParser.Group_by_itemContext) TSqlParserBaseListener.ExitGroup_by_item(TSqlParser.Group_by_itemContext) TSqlParserBaseListener.EnterOption_clause(TSqlParser.Option_clauseContext) TSqlParserBaseListener.ExitOption_clause(TSqlParser.Option_clauseContext) TSqlParserBaseListener.EnterOption(TSqlParser.OptionContext) TSqlParserBaseListener.ExitOption(TSqlParser.OptionContext) TSqlParserBaseListener.EnterOptimize_for_arg(TSqlParser.Optimize_for_argContext) TSqlParserBaseListener.ExitOptimize_for_arg(TSqlParser.Optimize_for_argContext) TSqlParserBaseListener.EnterSelect_list(TSqlParser.Select_listContext) TSqlParserBaseListener.ExitSelect_list(TSqlParser.Select_listContext) TSqlParserBaseListener.EnterUdt_method_arguments(TSqlParser.Udt_method_argumentsContext) TSqlParserBaseListener.ExitUdt_method_arguments(TSqlParser.Udt_method_argumentsContext) TSqlParserBaseListener.EnterAsterisk(TSqlParser.AsteriskContext) TSqlParserBaseListener.ExitAsterisk(TSqlParser.AsteriskContext) TSqlParserBaseListener.EnterColumn_elem(TSqlParser.Column_elemContext) TSqlParserBaseListener.ExitColumn_elem(TSqlParser.Column_elemContext) TSqlParserBaseListener.EnterUdt_elem(TSqlParser.Udt_elemContext) TSqlParserBaseListener.ExitUdt_elem(TSqlParser.Udt_elemContext) TSqlParserBaseListener.EnterExpression_elem(TSqlParser.Expression_elemContext) TSqlParserBaseListener.ExitExpression_elem(TSqlParser.Expression_elemContext) TSqlParserBaseListener.EnterSelect_list_elem(TSqlParser.Select_list_elemContext) TSqlParserBaseListener.ExitSelect_list_elem(TSqlParser.Select_list_elemContext) TSqlParserBaseListener.EnterTable_sources(TSqlParser.Table_sourcesContext) TSqlParserBaseListener.ExitTable_sources(TSqlParser.Table_sourcesContext) TSqlParserBaseListener.EnterTable_source(TSqlParser.Table_sourceContext) TSqlParserBaseListener.ExitTable_source(TSqlParser.Table_sourceContext) TSqlParserBaseListener.EnterTable_source_item_joined(TSqlParser.Table_source_item_joinedContext) TSqlParserBaseListener.ExitTable_source_item_joined(TSqlParser.Table_source_item_joinedContext) TSqlParserBaseListener.EnterTable_source_item(TSqlParser.Table_source_itemContext) TSqlParserBaseListener.ExitTable_source_item(TSqlParser.Table_source_itemContext) TSqlParserBaseListener.EnterOpen_xml(TSqlParser.Open_xmlContext) TSqlParserBaseListener.ExitOpen_xml(TSqlParser.Open_xmlContext) TSqlParserBaseListener.EnterOpen_json(TSqlParser.Open_jsonContext) TSqlParserBaseListener.ExitOpen_json(TSqlParser.Open_jsonContext) TSqlParserBaseListener.EnterJson_declaration(TSqlParser.Json_declarationContext) TSqlParserBaseListener.ExitJson_declaration(TSqlParser.Json_declarationContext) TSqlParserBaseListener.EnterJson_column_declaration(TSqlParser.Json_column_declarationContext) TSqlParserBaseListener.ExitJson_column_declaration(TSqlParser.Json_column_declarationContext) TSqlParserBaseListener.EnterSchema_declaration(TSqlParser.Schema_declarationContext) TSqlParserBaseListener.ExitSchema_declaration(TSqlParser.Schema_declarationContext) TSqlParserBaseListener.EnterColumn_declaration(TSqlParser.Column_declarationContext) TSqlParserBaseListener.ExitColumn_declaration(TSqlParser.Column_declarationContext) TSqlParserBaseListener.EnterChange_table(TSqlParser.Change_tableContext) TSqlParserBaseListener.ExitChange_table(TSqlParser.Change_tableContext) TSqlParserBaseListener.EnterChange_table_changes(TSqlParser.Change_table_changesContext) TSqlParserBaseListener.ExitChange_table_changes(TSqlParser.Change_table_changesContext) TSqlParserBaseListener.EnterChange_table_version(TSqlParser.Change_table_versionContext) TSqlParserBaseListener.ExitChange_table_version(TSqlParser.Change_table_versionContext) TSqlParserBaseListener.EnterJoin_part(TSqlParser.Join_partContext) TSqlParserBaseListener.ExitJoin_part(TSqlParser.Join_partContext) TSqlParserBaseListener.EnterJoin_on(TSqlParser.Join_onContext) TSqlParserBaseListener.ExitJoin_on(TSqlParser.Join_onContext) TSqlParserBaseListener.EnterCross_join(TSqlParser.Cross_joinContext) TSqlParserBaseListener.ExitCross_join(TSqlParser.Cross_joinContext) TSqlParserBaseListener.EnterApply_(TSqlParser.Apply_Context) TSqlParserBaseListener.ExitApply_(TSqlParser.Apply_Context) TSqlParserBaseListener.EnterPivot(TSqlParser.PivotContext) TSqlParserBaseListener.ExitPivot(TSqlParser.PivotContext) TSqlParserBaseListener.EnterUnpivot(TSqlParser.UnpivotContext) TSqlParserBaseListener.ExitUnpivot(TSqlParser.UnpivotContext) TSqlParserBaseListener.EnterPivot_clause(TSqlParser.Pivot_clauseContext) TSqlParserBaseListener.ExitPivot_clause(TSqlParser.Pivot_clauseContext) TSqlParserBaseListener.EnterUnpivot_clause(TSqlParser.Unpivot_clauseContext) TSqlParserBaseListener.ExitUnpivot_clause(TSqlParser.Unpivot_clauseContext) TSqlParserBaseListener.EnterFull_column_name_list(TSqlParser.Full_column_name_listContext) TSqlParserBaseListener.ExitFull_column_name_list(TSqlParser.Full_column_name_listContext) TSqlParserBaseListener.EnterTable_name_with_hint(TSqlParser.Table_name_with_hintContext) TSqlParserBaseListener.ExitTable_name_with_hint(TSqlParser.Table_name_with_hintContext) TSqlParserBaseListener.EnterRowset_function(TSqlParser.Rowset_functionContext) TSqlParserBaseListener.ExitRowset_function(TSqlParser.Rowset_functionContext) TSqlParserBaseListener.EnterBulk_option(TSqlParser.Bulk_optionContext) TSqlParserBaseListener.ExitBulk_option(TSqlParser.Bulk_optionContext) TSqlParserBaseListener.EnterDerived_table(TSqlParser.Derived_tableContext) TSqlParserBaseListener.ExitDerived_table(TSqlParser.Derived_tableContext) TSqlParserBaseListener.EnterRANKING_WINDOWED_FUNC(TSqlParser.RANKING_WINDOWED_FUNCContext) TSqlParserBaseListener.ExitRANKING_WINDOWED_FUNC(TSqlParser.RANKING_WINDOWED_FUNCContext) TSqlParserBaseListener.EnterAGGREGATE_WINDOWED_FUNC(TSqlParser.AGGREGATE_WINDOWED_FUNCContext) TSqlParserBaseListener.ExitAGGREGATE_WINDOWED_FUNC(TSqlParser.AGGREGATE_WINDOWED_FUNCContext) TSqlParserBaseListener.EnterANALYTIC_WINDOWED_FUNC(TSqlParser.ANALYTIC_WINDOWED_FUNCContext) TSqlParserBaseListener.ExitANALYTIC_WINDOWED_FUNC(TSqlParser.ANALYTIC_WINDOWED_FUNCContext) TSqlParserBaseListener.EnterBUILT_IN_FUNC(TSqlParser.BUILT_IN_FUNCContext) TSqlParserBaseListener.ExitBUILT_IN_FUNC(TSqlParser.BUILT_IN_FUNCContext) TSqlParserBaseListener.EnterSCALAR_FUNCTION(TSqlParser.SCALAR_FUNCTIONContext) TSqlParserBaseListener.ExitSCALAR_FUNCTION(TSqlParser.SCALAR_FUNCTIONContext) TSqlParserBaseListener.EnterFREE_TEXT(TSqlParser.FREE_TEXTContext) TSqlParserBaseListener.ExitFREE_TEXT(TSqlParser.FREE_TEXTContext) TSqlParserBaseListener.EnterPARTITION_FUNC(TSqlParser.PARTITION_FUNCContext) TSqlParserBaseListener.ExitPARTITION_FUNC(TSqlParser.PARTITION_FUNCContext) TSqlParserBaseListener.EnterPartition_function(TSqlParser.Partition_functionContext) TSqlParserBaseListener.ExitPartition_function(TSqlParser.Partition_functionContext) TSqlParserBaseListener.EnterFreetext_function(TSqlParser.Freetext_functionContext) TSqlParserBaseListener.ExitFreetext_function(TSqlParser.Freetext_functionContext) TSqlParserBaseListener.EnterFreetext_predicate(TSqlParser.Freetext_predicateContext) TSqlParserBaseListener.ExitFreetext_predicate(TSqlParser.Freetext_predicateContext) TSqlParserBaseListener.EnterBINARY_CHECKSUM(TSqlParser.BINARY_CHECKSUMContext) TSqlParserBaseListener.ExitBINARY_CHECKSUM(TSqlParser.BINARY_CHECKSUMContext) TSqlParserBaseListener.EnterCAST(TSqlParser.CASTContext) TSqlParserBaseListener.ExitCAST(TSqlParser.CASTContext) TSqlParserBaseListener.EnterTRY_CAST(TSqlParser.TRY_CASTContext) TSqlParserBaseListener.ExitTRY_CAST(TSqlParser.TRY_CASTContext) TSqlParserBaseListener.EnterCONVERT(TSqlParser.CONVERTContext) TSqlParserBaseListener.ExitCONVERT(TSqlParser.CONVERTContext) TSqlParserBaseListener.EnterCHECKSUM(TSqlParser.CHECKSUMContext) TSqlParserBaseListener.ExitCHECKSUM(TSqlParser.CHECKSUMContext) TSqlParserBaseListener.EnterCOALESCE(TSqlParser.COALESCEContext) TSqlParserBaseListener.ExitCOALESCE(TSqlParser.COALESCEContext) TSqlParserBaseListener.EnterCURRENT_TIMESTAMP(TSqlParser.CURRENT_TIMESTAMPContext) TSqlParserBaseListener.ExitCURRENT_TIMESTAMP(TSqlParser.CURRENT_TIMESTAMPContext) TSqlParserBaseListener.EnterCURRENT_USER(TSqlParser.CURRENT_USERContext) TSqlParserBaseListener.ExitCURRENT_USER(TSqlParser.CURRENT_USERContext) TSqlParserBaseListener.EnterDATEADD(TSqlParser.DATEADDContext) TSqlParserBaseListener.ExitDATEADD(TSqlParser.DATEADDContext) TSqlParserBaseListener.EnterDATEDIFF(TSqlParser.DATEDIFFContext) TSqlParserBaseListener.ExitDATEDIFF(TSqlParser.DATEDIFFContext) TSqlParserBaseListener.EnterDATENAME(TSqlParser.DATENAMEContext) TSqlParserBaseListener.ExitDATENAME(TSqlParser.DATENAMEContext) TSqlParserBaseListener.EnterDATEPART(TSqlParser.DATEPARTContext) TSqlParserBaseListener.ExitDATEPART(TSqlParser.DATEPARTContext) TSqlParserBaseListener.EnterGETDATE(TSqlParser.GETDATEContext) TSqlParserBaseListener.ExitGETDATE(TSqlParser.GETDATEContext) TSqlParserBaseListener.EnterGETUTCDATE(TSqlParser.GETUTCDATEContext) TSqlParserBaseListener.ExitGETUTCDATE(TSqlParser.GETUTCDATEContext) TSqlParserBaseListener.EnterIDENTITY(TSqlParser.IDENTITYContext) TSqlParserBaseListener.ExitIDENTITY(TSqlParser.IDENTITYContext) TSqlParserBaseListener.EnterMIN_ACTIVE_ROWVERSION(TSqlParser.MIN_ACTIVE_ROWVERSIONContext) TSqlParserBaseListener.ExitMIN_ACTIVE_ROWVERSION(TSqlParser.MIN_ACTIVE_ROWVERSIONContext) TSqlParserBaseListener.EnterNULLIF(TSqlParser.NULLIFContext) TSqlParserBaseListener.ExitNULLIF(TSqlParser.NULLIFContext) TSqlParserBaseListener.EnterSTUFF(TSqlParser.STUFFContext) TSqlParserBaseListener.ExitSTUFF(TSqlParser.STUFFContext) TSqlParserBaseListener.EnterSESSION_USER(TSqlParser.SESSION_USERContext) TSqlParserBaseListener.ExitSESSION_USER(TSqlParser.SESSION_USERContext) TSqlParserBaseListener.EnterSYSTEM_USER(TSqlParser.SYSTEM_USERContext) TSqlParserBaseListener.ExitSYSTEM_USER(TSqlParser.SYSTEM_USERContext) TSqlParserBaseListener.EnterUSER(TSqlParser.USERContext) TSqlParserBaseListener.ExitUSER(TSqlParser.USERContext) TSqlParserBaseListener.EnterISNULL(TSqlParser.ISNULLContext) TSqlParserBaseListener.ExitISNULL(TSqlParser.ISNULLContext) TSqlParserBaseListener.EnterXML_DATA_TYPE_FUNC(TSqlParser.XML_DATA_TYPE_FUNCContext) TSqlParserBaseListener.ExitXML_DATA_TYPE_FUNC(TSqlParser.XML_DATA_TYPE_FUNCContext) TSqlParserBaseListener.EnterIIF(TSqlParser.IIFContext) TSqlParserBaseListener.ExitIIF(TSqlParser.IIFContext) TSqlParserBaseListener.EnterSTRINGAGG(TSqlParser.STRINGAGGContext) TSqlParserBaseListener.ExitSTRINGAGG(TSqlParser.STRINGAGGContext) TSqlParserBaseListener.EnterXml_data_type_methods(TSqlParser.Xml_data_type_methodsContext) TSqlParserBaseListener.ExitXml_data_type_methods(TSqlParser.Xml_data_type_methodsContext) TSqlParserBaseListener.EnterValue_method(TSqlParser.Value_methodContext) TSqlParserBaseListener.ExitValue_method(TSqlParser.Value_methodContext) TSqlParserBaseListener.EnterValue_call(TSqlParser.Value_callContext) TSqlParserBaseListener.ExitValue_call(TSqlParser.Value_callContext) TSqlParserBaseListener.EnterQuery_method(TSqlParser.Query_methodContext) TSqlParserBaseListener.ExitQuery_method(TSqlParser.Query_methodContext) TSqlParserBaseListener.EnterQuery_call(TSqlParser.Query_callContext) TSqlParserBaseListener.ExitQuery_call(TSqlParser.Query_callContext) TSqlParserBaseListener.EnterExist_method(TSqlParser.Exist_methodContext) TSqlParserBaseListener.ExitExist_method(TSqlParser.Exist_methodContext) TSqlParserBaseListener.EnterExist_call(TSqlParser.Exist_callContext) TSqlParserBaseListener.ExitExist_call(TSqlParser.Exist_callContext) TSqlParserBaseListener.EnterModify_method(TSqlParser.Modify_methodContext) TSqlParserBaseListener.ExitModify_method(TSqlParser.Modify_methodContext) TSqlParserBaseListener.EnterModify_call(TSqlParser.Modify_callContext) TSqlParserBaseListener.ExitModify_call(TSqlParser.Modify_callContext) TSqlParserBaseListener.EnterNodes_method(TSqlParser.Nodes_methodContext) TSqlParserBaseListener.ExitNodes_method(TSqlParser.Nodes_methodContext) TSqlParserBaseListener.EnterSwitch_section(TSqlParser.Switch_sectionContext) TSqlParserBaseListener.ExitSwitch_section(TSqlParser.Switch_sectionContext) TSqlParserBaseListener.EnterSwitch_search_condition_section(TSqlParser.Switch_search_condition_sectionContext) TSqlParserBaseListener.ExitSwitch_search_condition_section(TSqlParser.Switch_search_condition_sectionContext) TSqlParserBaseListener.EnterAs_column_alias(TSqlParser.As_column_aliasContext) TSqlParserBaseListener.ExitAs_column_alias(TSqlParser.As_column_aliasContext) TSqlParserBaseListener.EnterAs_table_alias(TSqlParser.As_table_aliasContext) TSqlParserBaseListener.ExitAs_table_alias(TSqlParser.As_table_aliasContext) TSqlParserBaseListener.EnterTable_alias(TSqlParser.Table_aliasContext) TSqlParserBaseListener.ExitTable_alias(TSqlParser.Table_aliasContext) TSqlParserBaseListener.EnterWith_table_hints(TSqlParser.With_table_hintsContext) TSqlParserBaseListener.ExitWith_table_hints(TSqlParser.With_table_hintsContext) TSqlParserBaseListener.EnterInsert_with_table_hints(TSqlParser.Insert_with_table_hintsContext) TSqlParserBaseListener.ExitInsert_with_table_hints(TSqlParser.Insert_with_table_hintsContext) TSqlParserBaseListener.EnterTable_hint(TSqlParser.Table_hintContext) TSqlParserBaseListener.ExitTable_hint(TSqlParser.Table_hintContext) TSqlParserBaseListener.EnterIndex_value(TSqlParser.Index_valueContext) TSqlParserBaseListener.ExitIndex_value(TSqlParser.Index_valueContext) TSqlParserBaseListener.EnterColumn_alias_list(TSqlParser.Column_alias_listContext) TSqlParserBaseListener.ExitColumn_alias_list(TSqlParser.Column_alias_listContext) TSqlParserBaseListener.EnterColumn_alias(TSqlParser.Column_aliasContext) TSqlParserBaseListener.ExitColumn_alias(TSqlParser.Column_aliasContext) TSqlParserBaseListener.EnterTable_value_constructor(TSqlParser.Table_value_constructorContext) TSqlParserBaseListener.ExitTable_value_constructor(TSqlParser.Table_value_constructorContext) TSqlParserBaseListener.EnterExpression_list(TSqlParser.Expression_listContext) TSqlParserBaseListener.ExitExpression_list(TSqlParser.Expression_listContext) TSqlParserBaseListener.EnterRanking_windowed_function(TSqlParser.Ranking_windowed_functionContext) TSqlParserBaseListener.ExitRanking_windowed_function(TSqlParser.Ranking_windowed_functionContext) TSqlParserBaseListener.EnterAggregate_windowed_function(TSqlParser.Aggregate_windowed_functionContext) TSqlParserBaseListener.ExitAggregate_windowed_function(TSqlParser.Aggregate_windowed_functionContext) TSqlParserBaseListener.EnterAnalytic_windowed_function(TSqlParser.Analytic_windowed_functionContext) TSqlParserBaseListener.ExitAnalytic_windowed_function(TSqlParser.Analytic_windowed_functionContext) TSqlParserBaseListener.EnterAll_distinct_expression(TSqlParser.All_distinct_expressionContext) TSqlParserBaseListener.ExitAll_distinct_expression(TSqlParser.All_distinct_expressionContext) TSqlParserBaseListener.EnterOver_clause(TSqlParser.Over_clauseContext) TSqlParserBaseListener.ExitOver_clause(TSqlParser.Over_clauseContext) TSqlParserBaseListener.EnterRow_or_range_clause(TSqlParser.Row_or_range_clauseContext) TSqlParserBaseListener.ExitRow_or_range_clause(TSqlParser.Row_or_range_clauseContext) TSqlParserBaseListener.EnterWindow_frame_extent(TSqlParser.Window_frame_extentContext) TSqlParserBaseListener.ExitWindow_frame_extent(TSqlParser.Window_frame_extentContext) TSqlParserBaseListener.EnterWindow_frame_bound(TSqlParser.Window_frame_boundContext) TSqlParserBaseListener.ExitWindow_frame_bound(TSqlParser.Window_frame_boundContext) TSqlParserBaseListener.EnterWindow_frame_preceding(TSqlParser.Window_frame_precedingContext) TSqlParserBaseListener.ExitWindow_frame_preceding(TSqlParser.Window_frame_precedingContext) TSqlParserBaseListener.EnterWindow_frame_following(TSqlParser.Window_frame_followingContext) TSqlParserBaseListener.ExitWindow_frame_following(TSqlParser.Window_frame_followingContext) TSqlParserBaseListener.EnterCreate_database_option(TSqlParser.Create_database_optionContext) TSqlParserBaseListener.ExitCreate_database_option(TSqlParser.Create_database_optionContext) TSqlParserBaseListener.EnterDatabase_filestream_option(TSqlParser.Database_filestream_optionContext) TSqlParserBaseListener.ExitDatabase_filestream_option(TSqlParser.Database_filestream_optionContext) TSqlParserBaseListener.EnterDatabase_file_spec(TSqlParser.Database_file_specContext) TSqlParserBaseListener.ExitDatabase_file_spec(TSqlParser.Database_file_specContext) TSqlParserBaseListener.EnterFile_group(TSqlParser.File_groupContext) TSqlParserBaseListener.ExitFile_group(TSqlParser.File_groupContext) TSqlParserBaseListener.EnterFile_spec(TSqlParser.File_specContext) TSqlParserBaseListener.ExitFile_spec(TSqlParser.File_specContext) TSqlParserBaseListener.EnterEntity_name(TSqlParser.Entity_nameContext) TSqlParserBaseListener.ExitEntity_name(TSqlParser.Entity_nameContext) TSqlParserBaseListener.EnterEntity_name_for_azure_dw(TSqlParser.Entity_name_for_azure_dwContext) TSqlParserBaseListener.ExitEntity_name_for_azure_dw(TSqlParser.Entity_name_for_azure_dwContext) TSqlParserBaseListener.EnterEntity_name_for_parallel_dw(TSqlParser.Entity_name_for_parallel_dwContext) TSqlParserBaseListener.ExitEntity_name_for_parallel_dw(TSqlParser.Entity_name_for_parallel_dwContext) TSqlParserBaseListener.EnterFull_table_name(TSqlParser.Full_table_nameContext) TSqlParserBaseListener.ExitFull_table_name(TSqlParser.Full_table_nameContext) TSqlParserBaseListener.EnterTable_name(TSqlParser.Table_nameContext) TSqlParserBaseListener.ExitTable_name(TSqlParser.Table_nameContext) TSqlParserBaseListener.EnterSimple_name(TSqlParser.Simple_nameContext) TSqlParserBaseListener.ExitSimple_name(TSqlParser.Simple_nameContext) TSqlParserBaseListener.EnterFunc_proc_name_schema(TSqlParser.Func_proc_name_schemaContext) TSqlParserBaseListener.ExitFunc_proc_name_schema(TSqlParser.Func_proc_name_schemaContext) TSqlParserBaseListener.EnterFunc_proc_name_database_schema(TSqlParser.Func_proc_name_database_schemaContext) TSqlParserBaseListener.ExitFunc_proc_name_database_schema(TSqlParser.Func_proc_name_database_schemaContext) TSqlParserBaseListener.EnterFunc_proc_name_server_database_schema(TSqlParser.Func_proc_name_server_database_schemaContext) TSqlParserBaseListener.ExitFunc_proc_name_server_database_schema(TSqlParser.Func_proc_name_server_database_schemaContext) TSqlParserBaseListener.EnterDdl_object(TSqlParser.Ddl_objectContext) TSqlParserBaseListener.ExitDdl_object(TSqlParser.Ddl_objectContext) TSqlParserBaseListener.EnterFull_column_name(TSqlParser.Full_column_nameContext) TSqlParserBaseListener.ExitFull_column_name(TSqlParser.Full_column_nameContext) TSqlParserBaseListener.EnterColumn_name_list_with_order(TSqlParser.Column_name_list_with_orderContext) TSqlParserBaseListener.ExitColumn_name_list_with_order(TSqlParser.Column_name_list_with_orderContext) TSqlParserBaseListener.EnterInsert_column_name_list(TSqlParser.Insert_column_name_listContext) TSqlParserBaseListener.ExitInsert_column_name_list(TSqlParser.Insert_column_name_listContext) TSqlParserBaseListener.EnterInsert_column_id(TSqlParser.Insert_column_idContext) TSqlParserBaseListener.ExitInsert_column_id(TSqlParser.Insert_column_idContext) TSqlParserBaseListener.EnterColumn_name_list(TSqlParser.Column_name_listContext) TSqlParserBaseListener.ExitColumn_name_list(TSqlParser.Column_name_listContext) TSqlParserBaseListener.EnterCursor_name(TSqlParser.Cursor_nameContext) TSqlParserBaseListener.ExitCursor_name(TSqlParser.Cursor_nameContext) TSqlParserBaseListener.EnterOn_off(TSqlParser.On_offContext) TSqlParserBaseListener.ExitOn_off(TSqlParser.On_offContext) TSqlParserBaseListener.EnterClustered(TSqlParser.ClusteredContext) TSqlParserBaseListener.ExitClustered(TSqlParser.ClusteredContext) TSqlParserBaseListener.EnterNull_notnull(TSqlParser.Null_notnullContext) TSqlParserBaseListener.ExitNull_notnull(TSqlParser.Null_notnullContext) TSqlParserBaseListener.EnterNull_or_default(TSqlParser.Null_or_defaultContext) TSqlParserBaseListener.ExitNull_or_default(TSqlParser.Null_or_defaultContext) TSqlParserBaseListener.EnterScalar_function_name(TSqlParser.Scalar_function_nameContext) TSqlParserBaseListener.ExitScalar_function_name(TSqlParser.Scalar_function_nameContext) TSqlParserBaseListener.EnterBegin_conversation_timer(TSqlParser.Begin_conversation_timerContext) TSqlParserBaseListener.ExitBegin_conversation_timer(TSqlParser.Begin_conversation_timerContext) TSqlParserBaseListener.EnterBegin_conversation_dialog(TSqlParser.Begin_conversation_dialogContext) TSqlParserBaseListener.ExitBegin_conversation_dialog(TSqlParser.Begin_conversation_dialogContext) TSqlParserBaseListener.EnterContract_name(TSqlParser.Contract_nameContext) TSqlParserBaseListener.ExitContract_name(TSqlParser.Contract_nameContext) TSqlParserBaseListener.EnterService_name(TSqlParser.Service_nameContext) TSqlParserBaseListener.ExitService_name(TSqlParser.Service_nameContext) TSqlParserBaseListener.EnterEnd_conversation(TSqlParser.End_conversationContext) TSqlParserBaseListener.ExitEnd_conversation(TSqlParser.End_conversationContext) TSqlParserBaseListener.EnterWaitfor_conversation(TSqlParser.Waitfor_conversationContext) TSqlParserBaseListener.ExitWaitfor_conversation(TSqlParser.Waitfor_conversationContext) TSqlParserBaseListener.EnterGet_conversation(TSqlParser.Get_conversationContext) TSqlParserBaseListener.ExitGet_conversation(TSqlParser.Get_conversationContext) TSqlParserBaseListener.EnterQueue_id(TSqlParser.Queue_idContext) TSqlParserBaseListener.ExitQueue_id(TSqlParser.Queue_idContext) TSqlParserBaseListener.EnterSend_conversation(TSqlParser.Send_conversationContext) TSqlParserBaseListener.ExitSend_conversation(TSqlParser.Send_conversationContext) TSqlParserBaseListener.EnterData_type(TSqlParser.Data_typeContext) TSqlParserBaseListener.ExitData_type(TSqlParser.Data_typeContext) TSqlParserBaseListener.EnterDefault_value(TSqlParser.Default_valueContext) TSqlParserBaseListener.ExitDefault_value(TSqlParser.Default_valueContext) TSqlParserBaseListener.EnterConstant(TSqlParser.ConstantContext) TSqlParserBaseListener.ExitConstant(TSqlParser.ConstantContext) TSqlParserBaseListener.EnterSign(TSqlParser.SignContext) TSqlParserBaseListener.ExitSign(TSqlParser.SignContext) TSqlParserBaseListener.EnterKeyword(TSqlParser.KeywordContext) TSqlParserBaseListener.ExitKeyword(TSqlParser.KeywordContext) TSqlParserBaseListener.EnterId_(TSqlParser.Id_Context) TSqlParserBaseListener.ExitId_(TSqlParser.Id_Context) TSqlParserBaseListener.EnterSimple_id(TSqlParser.Simple_idContext) TSqlParserBaseListener.ExitSimple_id(TSqlParser.Simple_idContext) TSqlParserBaseListener.EnterId_or_string(TSqlParser.Id_or_stringContext) TSqlParserBaseListener.ExitId_or_string(TSqlParser.Id_or_stringContext) TSqlParserBaseListener.EnterComparison_operator(TSqlParser.Comparison_operatorContext) TSqlParserBaseListener.ExitComparison_operator(TSqlParser.Comparison_operatorContext) TSqlParserBaseListener.EnterAssignment_operator(TSqlParser.Assignment_operatorContext) TSqlParserBaseListener.ExitAssignment_operator(TSqlParser.Assignment_operatorContext) TSqlParserBaseListener.EnterFile_size(TSqlParser.File_sizeContext) TSqlParserBaseListener.ExitFile_size(TSqlParser.File_sizeContext) TSqlParserBaseListener.EnterEveryRule(ParserRuleContext) TSqlParserBaseListener.ExitEveryRule(ParserRuleContext) TSqlParserBaseListener.VisitTerminal(ITerminalNode) TSqlParserBaseListener.VisitErrorNode(IErrorNode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SQLHelperDB.HelperClasses Assembly: SQLHelper.DB.dll Syntax public class SelectFinder : TSqlParserBaseListener, ITSqlParserListener, IParseTreeListener Properties | Improve this Doc View Source StatementFound Gets or sets a value indicating whether a select [statement found]. Declaration public bool StatementFound { get; set; } Property Value Type Description bool true if [statement found]; otherwise, false. See Also TSqlParserBaseListener Methods | Improve this Doc View Source EnterDml_clause(Dml_clauseContext) Enter a parse tree produced by dml_clause(). The default implementation does nothing. Declaration public override void EnterDml_clause(TSqlParser.Dml_clauseContext context) Parameters Type Name Description TSqlParser.Dml_clauseContext context The parse tree. Overrides TSqlParserBaseListener.EnterDml_clause(TSqlParser.Dml_clauseContext) See Also TSqlParserBaseListener Implements ITSqlParserListener Antlr4.Runtime.Tree.IParseTreeListener See Also TSqlParserBaseListener"
  },
  "api/SQLHelperDB.HelperClasses.StringParameter.html": {
    "href": "api/SQLHelperDB.HelperClasses.StringParameter.html",
    "title": "Class StringParameter | SQLHelper API Reference",
    "keywords": "Class StringParameter Holds parameter information Inheritance object ParameterBase<string> StringParameter Implements IParameter<string> IParameter Inherited Members ParameterBase<string>.DatabaseType ParameterBase<string>.Direction ParameterBase<string>.ID ParameterBase<string>.InternalValue ParameterBase<string>.ParameterStarter ParameterBase<string>.Value ParameterBase<string>.BatchID ParameterBase<string>.AddParameter(string) ParameterBase<string>.Equals(object) ParameterBase<string>.GetHashCode() ParameterBase<string>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SQLHelperDB.HelperClasses Assembly: SQLHelper.DB.dll Syntax public class StringParameter : ParameterBase<string>, IParameter<string>, IParameter Constructors | Improve this Doc View Source StringParameter(string, string, ParameterDirection, string) Constructor Declaration public StringParameter(string id, string value, ParameterDirection direction = ParameterDirection.Input, string parameterStarter = \"@\") Parameters Type Name Description string id ID of the parameter string value Value of the parameter ParameterDirection direction Direction of the parameter string parameterStarter Parameter starter Methods | Improve this Doc View Source AddParameter(DbCommand) Adds this parameter to the SQLHelper Declaration public override void AddParameter(DbCommand helper) Parameters Type Name Description DbCommand helper SQLHelper Overrides ParameterBase<string>.AddParameter(DbCommand) | Improve this Doc View Source CreateCopy(string) Creates a copy of the parameter Declaration public override IParameter CreateCopy(string suffix) Parameters Type Name Description string suffix Suffix to add to the parameter (for batching purposes) Returns Type Description IParameter A copy of the parameter Overrides ParameterBase<string>.CreateCopy(string) Implements IParameter<T> IParameter"
  },
  "api/SQLHelperDB.html": {
    "href": "api/SQLHelperDB.html",
    "title": "Namespace SQLHelperDB | SQLHelper API Reference",
    "keywords": "Namespace SQLHelperDB Classes SQLHelper SQL helper class"
  },
  "api/SQLHelperDB.SQLHelper.html": {
    "href": "api/SQLHelperDB.SQLHelper.html",
    "title": "Class SQLHelper | SQLHelper API Reference",
    "keywords": "Class SQLHelper SQL helper class Inheritance object SQLHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SQLHelperDB Assembly: SQLHelper.DB.dll Syntax public class SQLHelper Constructors | Improve this Doc View Source SQLHelper(ObjectPool<StringBuilder>, IConfiguration, ILogger<SQLHelper>?) Initializes a new instance of the SQLHelper class. Declaration public SQLHelper(ObjectPool<StringBuilder> stringBuilderPool, IConfiguration configuration, ILogger<SQLHelper>? logger = null) Parameters Type Name Description ObjectPool<StringBuilder> stringBuilderPool The string builder pool. IConfiguration configuration The configuration. ILogger<SQLHelper> logger The logger. Properties | Improve this Doc View Source Batch Gets the batch. Declaration protected IBatch Batch { get; } Property Value Type Description IBatch The batch. | Improve this Doc View Source Configuration Gets the configuration. Declaration protected IConfiguration Configuration { get; } Property Value Type Description IConfiguration The configuration. | Improve this Doc View Source Count Gets the number of commands currently in the batch. Declaration public int Count { get; } Property Value Type Description int The number of commands currently in the batch | Improve this Doc View Source DatabaseConnection Gets or sets the source. Declaration public IConnection? DatabaseConnection { get; } Property Value Type Description IConnection The source. | Improve this Doc View Source StringBuilderPool Gets the string builder pool. Declaration protected ObjectPool<StringBuilder> StringBuilderPool { get; } Property Value Type Description ObjectPool<StringBuilder> The string builder pool. Methods | Improve this Doc View Source AddHeader(CommandType, string, params object[]?) Adds a query that gets carried across in internal batches. Declaration public SQLHelper AddHeader(CommandType commandType, string command, params object[]? parameters) Parameters Type Name Description CommandType commandType Type of the command. string command The command. object[] parameters The parameters. Returns Type Description SQLHelper This | Improve this Doc View Source AddHeader<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData>, TCallbackData, CommandType, string, params object[]?) Adds a query that gets carried across in internal batches. Declaration public SQLHelper AddHeader<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData> callback, TCallbackData callbackObject, CommandType commandType, string command, params object[]? parameters) Parameters Type Name Description Action<ICommand, List<dynamic>, TCallbackData> callback The callback. TCallbackData callbackObject The callback object. CommandType commandType Type of the command. string command The command. object[] parameters The parameters. Returns Type Description SQLHelper This Type Parameters Name Description TCallbackData The type of the callback data. | Improve this Doc View Source AddQuery(SQLHelper) Adds an SQLHelper's commands to this instance Declaration public SQLHelper AddQuery(SQLHelper helper) Parameters Type Name Description SQLHelper helper The helper to copy the commands from Returns Type Description SQLHelper This | Improve this Doc View Source AddQuery(CommandType, string, params object[]?) Adds a command. Declaration public SQLHelper AddQuery(CommandType commandType, string command, params object[]? parameters) Parameters Type Name Description CommandType commandType Type of the command. string command The command. object[] parameters The parameters. Returns Type Description SQLHelper This | Improve this Doc View Source AddQuery<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData>, TCallbackData, CommandType, string, params object[]?) Adds a command which will call the callback function with the object specified when it Declaration public SQLHelper AddQuery<TCallbackData>(Action<ICommand, List<dynamic>, TCallbackData> callback, TCallbackData callbackObject, CommandType commandType, string command, params object[]? parameters) Parameters Type Name Description Action<ICommand, List<dynamic>, TCallbackData> callback The callback. TCallbackData callbackObject The callback object. CommandType commandType Type of the command. string command The command. object[] parameters The parameters. Returns Type Description SQLHelper This Type Parameters Name Description TCallbackData The type of the callback data. | Improve this Doc View Source Copy() Creates a copy of this instance. Declaration public SQLHelper Copy() Returns Type Description SQLHelper A new SQLHelper based on this instance. | Improve this Doc View Source CreateBatch() Clears the system and creates a new batch. Declaration public SQLHelper CreateBatch() Returns Type Description SQLHelper This | Improve this Doc View Source CreateBatch(IConnection) Creates the batch using the connection specified. Declaration public SQLHelper CreateBatch(IConnection connection) Parameters Type Name Description IConnection connection The connection. Returns Type Description SQLHelper This | Improve this Doc View Source CreateBatch(DbProviderFactory?, string) Creates the batch using the connection info specified. Declaration public SQLHelper CreateBatch(DbProviderFactory? factory = null, string database = \"Default\") Parameters Type Name Description DbProviderFactory factory The factory. string database The database. Returns Type Description SQLHelper This. | Improve this Doc View Source ExecuteAsync() Executes the queries asynchronously. Declaration public Task<List<List<dynamic>>> ExecuteAsync() Returns Type Description Task<List<List<dynamic>>> The result of the queries | Improve this Doc View Source ExecuteScalarAsync<TData>(TData) Executes the batched commands and returns the first value, ignoring the rest (async). Declaration public Task<TData> ExecuteScalarAsync<TData>(TData defaultValue = default) Parameters Type Name Description TData defaultValue The default value. Returns Type Description Task<TData> The first value of the batch Type Parameters Name Description TData The type of the data to return. | Improve this Doc View Source RemoveDuplicateCommands() Removes duplicate queries from the batch. Declaration public SQLHelper RemoveDuplicateCommands() Returns Type Description SQLHelper This | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString()"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | SQLHelper API Reference",
    "keywords": "Code using Microsoft.Extensions.DependencyInjection; using System.Data.SqlClient; namespace SQLHelper.Example { /// <summary> /// This is an example program that shows how to use the SQLHelper.DB library to execute a batch of queries. /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static async Task Main(string[] args) { // Start by creating a new ServiceCollection and adding the Canister modules to it (this will also add the SQLHelper module) var Services = new ServiceCollection().AddCanisterModules()?.BuildServiceProvider(); // Get the SQLHelper instance from the ServiceCollection var Helper = Services.GetService<SQLHelperDB.SQLHelper>(); // Execute a batch of queries and return the results (this will return a list of lists of rows. The first list contains the results of each query. The inner lists contain the rows.) var Results = await Helper.CreateBatch(SqlClientFactory.Instance) .AddQuery(System.Data.CommandType.Text, \"SELECT * FROM [dbo].[TestTable]\") .AddQuery(System.Data.CommandType.Text, \"SELECT * FROM [dbo].[TestTable]\") .ExecuteAsync() .ConfigureAwait(false); // Go through each result foreach (var Result in Results) { // Go through each row in the result foreach (var Row in Result) { // Write the row to the console Console.WriteLine(Row.ToString()); } } } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "SQLHelper | SQLHelper API Reference",
    "keywords": "SQLHelper SQLHelper is a simple class to help with running queries against a database. Basic Usage In order to use the system, you do need register it with your ServiceCollection: serviceCollection.AddCanisterModules(); This is required prior to using the SQLHelper class for the first time. Once Canister is set up, you can use the SQLHelper class: var Configuration = new ConfigurationBuilder() .AddInMemoryCollection() .Build(); var Instance = new SQLHelper(Configuration, SqlClientFactory.Instance, \"ConnectionString\"); Or simply ask for an instance using dependency injection: public MyClass(SQLHelper helper) { ... } The SQLHelper class takes in a IConfiguration class, a DbProviderFactory class, and the connection string. The connection string can just be the name of a connection string in your configuration object. Once an instance is set up, you can create a batch, add queries, and then execute them. var Results = Instance.CreateBatch() .AddQuery(CommandType.Text,\"SELECT * FROM [TestDatabase].[dbo].[TestTable]\") .AddQuery(CommandType.Text,\"SELECT * FROM [TestDatabase].[dbo].[TestTable2]\") .AddQuery(CommandType.Text,\"SELECT * FROM [TestDatabase].[dbo].[TestTable3]\") .Execute(); The Results object then holds the results for all 3 queries and is returned as IList<IList >. So in order to get the results from the queries: var FirstQueryResults = Results[0]; var SecondQueryResults = Results[1]; var ThirdQueryResults = Results[2]; It is also possible to convert the results from the dynamic type to a class type that you specify: var TestTableClasses = FirstQueryResults.Select(x => (TestTableClass)x).ToList(); The type will be converted automatically for you with no special type conversion required. SQLHelper also has an ExecuteScalar function: var Result = Instance.ExecuteScalar<int>(); This will either return the first value of the first set of results OR it will return the number of rows that were effected depending on whether or not the query was a select or not. Installation The library is available via Nuget with the package name \"SQLHelper.DB\". To install it run the following command in the Package Manager Console: Install-Package SQLHelper.DB Build Process In order to build the library you will require the following as a minimum: Visual Studio 2022 Other than that, just clone the project and you should be able to load the solution and build without too much effort."
  }
}